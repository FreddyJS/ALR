{"version":3,"sources":["components/PageHeader/index.js","components/PageHeader/PageHeader.js","sockets.js","services/routes.js","components/RoomInput/index.js","components/RoomInput/RoomInput.js","content/RoomPage/index.js","content/RoomPage/RoomPage.js","content/Crono/Crono.js","content/Dashboard/Dashboard.js","content/Dashboard/index.js","content/Dashboard/Rectangle.js","content/Dashboard/DashboardDev.js","content/Stats/Stats.js","content/Stats/hooks/useColumns.js","content/Stats/hooks/useRows.js","App.js","reportWebVitals.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/counterReducer.js","store.js","index.js"],"names":["PageHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","RobotSocket","WebSocket","onmessage","event","data","JSON","parse","console","log","UISocket","getRoutes","a","axios","get","process","response","RoomInput","onSubmit","onChange","value","className","Button","RoomPage","React","useState","roomNumber","setRoomNumber","isModalOpen","setIsModalOpen","wrongRoomNumber","setWrongRoomNumber","route","setRoute","inPath","setInPath","nextDirection","setNextDirection","sendHelllo","from","type","message","send","stringify","onRoomSubmit","routes","find","r","dest_room","origin_room","style","display","flexDirection","justifyContent","alignItems","marginBottom","margin","Modal","open","onRequestClose","onRequestSubmit","room","onModalSubmit","modalHeading","primaryButtonText","src","alt","Tile","color","split","startsWith","width","height","fill","stopWatchState","running","currentTime","lastTime","stopWatchReducer","state","action","Date","now","Crono","useReducer","dispatch","time","duration","date","hours","getHours","getTimezoneOffset","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","toString","padStart","timeConverter","useEffect","frame","requestAnimationFrame","tick","cancelAnimationFrame","id","hidden","halls","Dashboard","stageRef","useRef","rectRef","hall","setHall","hallsId","cont_inic","cont_parar","i","length","undefined","current","opacity","push","active","document","getElementById","click","anim","Konva","Animation","Math","sin","getLayer","start","stop","stage","stageWidth","stageHeight","ref","layers","map","layer","index","hallId","elements","el","attrs","splice","Rectangle","shapeProps","isSelected","onSelect","shapeRef","trRef","nodes","batchDraw","Fragment","onTap","draggable","onDragEnd","e","x","target","y","onTransformEnd","node","scaleX","scaleY","max","boundBoxFunc","oldBox","newBox","defaultTextProps","text","fontSize","defaultRoomProps","defaultHallProps","defaultStickerProps","DashboardDev","shapes","setShapes","selectedShape","selectShape","newTextData","setNewTextData","stickerColor","setStickerColor","hallOrientation","setHallOrientation","exportCanvasToJSON","children","filter","object","name","dataStr","encodeURIComponent","link","createElement","download","href","body","appendChild","removeChild","downloadJSON","appendShape","newRect","shape","newText","marginTop","marginRight","Checkbox","labelText","checked","TextInput","placeholder","slice","border","newShape","s","colors","next","indexOf","Stats","columns","useMemo","accessor","robot","destino","salida","llegada","table","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","App","Content","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","performance","newState","end","diff","round","logger","store","group","info","result","getState","groupEnd","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","createSlice","status","reducers","increment","decrement","incrementByAmount","payload","extraReducers","builder","addCase","pending","fulfilled","actions","rootReducer","combineReducers","counter","counterReducer","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","compose","configureStore","ReactDOM"],"mappings":"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","file":"static/js/main.2f9e9b8d.chunk.js","sourcesContent":["import PageHeader from './PageHeader';\nexport default PageHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\n\nimport {\n    AppSwitcher20,\n    Notification20,\n    UserAvatar20,\n  } from '@carbon/icons-react';\nimport { Link } from 'react-router-dom';\n\nconst PageHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"guiaMe\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"AGR\">\n          guiaMe\n        </HeaderName>\n        <HeaderNavigation aria-label=\"guiaMe\">\n          <HeaderMenuItem element={Link} to=\"/room\">Room Page</HeaderMenuItem>\n          <HeaderMenuItem element={Link} to=\"/mapdev\">Map Editor</HeaderMenuItem>\n          <HeaderMenuItem element={Link} to=\"/stats\">Estadísticas</HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n                <HeaderMenuItem element={Link} to=\"/room\">\n                    Room Page\n                </HeaderMenuItem>\n                <HeaderMenuItem element={Link} to=\"/mapdev\">\n                    Map Editor\n                </HeaderMenuItem>\n                <HeaderMenuItem element={Link} to=\"/stats\">\n                    Estadísticas\n                </HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n            <HeaderGlobalAction aria-label=\"Notifications\">\n                <Notification20 />\n            </HeaderGlobalAction>\n            <HeaderGlobalAction aria-label=\"User Avatar\">\n                <UserAvatar20 />\n            </HeaderGlobalAction>\n            <HeaderGlobalAction aria-label=\"App Switcher\">\n                <AppSwitcher20 />\n            </HeaderGlobalAction>\n        </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default PageHeader;\n","const RobotSocket = new WebSocket('ws://localhost:8000/ws/robot/R01/');\nRobotSocket.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log(\"RobotSocket Received: \", data);\n};\n\nconst UISocket = new WebSocket('ws://localhost:8000/ws/ui/R01/');\nUISocket.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log(\"UISocket Received: \", data);\n};\n\n\nexport { UISocket, RobotSocket };","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst getRoutes = async () => {\n  const response = await axios.get(`${baseURL}routes`);\n  return response.data;\n}\n\nexport { getRoutes };","import RoomInput from \"./RoomInput\";\nexport default RoomInput;","import React from \"react\";\n\nimport './room-input.scss';\n\nimport { Button } from \"carbon-components-react\";\n\nconst RoomInput = ({ onSubmit, onChange, value }) => {\n  return (\n    <div className=\"room-page__keyboard\">\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"1\")}>1</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"2\")}>2</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"3\")}>3</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"4\")}>4</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"5\")}>5</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"6\")}>6</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"7\")}>7</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"8\")}>8</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"9\")}>9</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(\"\")}>Reset</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"0\")}>0</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onSubmit()}>OK</Button>\n          </div>\n        </div>\n  );\n};\n\nexport default RoomInput;","import RoomPage from './RoomPage';\nexport default RoomPage;\n","import React from 'react';\n\nimport { RobotSocket, UISocket } from '../../sockets';\nimport { Button, Tile, Modal } from 'carbon-components-react';\n\nimport { getRoutes } from '../../services/routes';\nimport RoomInput from '../../components/RoomInput';\nimport { AiOutlineArrowUp, AiOutlineArrowRight, AiOutlineArrowDown, AiOutlineArrowLeft } from \"react-icons/ai\";\n\nconst RoomPage = () => {\n  const [roomNumber, setRoomNumber] = React.useState('');\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const [wrongRoomNumber, setWrongRoomNumber] = React.useState(false);\n  const [route, setRoute] = React.useState([]);\n\n  const [inPath, setInPath] = React.useState(false);\n  const [nextDirection, setNextDirection] = React.useState('');\n\n  const sendHelllo = (from) => {\n    const data = {\n      type: from === 'UI' ? 'to.robot' : 'to.ui',\n      message: \"Hello from \" + from,\n    };\n\n    if (from === \"UI\") {\n      UISocket.send(JSON.stringify(data));\n    } else {\n      RobotSocket.send(JSON.stringify(data));\n    }\n  };\n\n  const onRoomSubmit = async () => {\n    const routes = await getRoutes();\n    const route = routes.find(r => r.dest_room === roomNumber && r.origin_room === 'hall');\n\n    if (route) {\n      console.log(\"Route:\", route);\n      setRoute(route.route);\n      setIsModalOpen(true);\n    } else {\n      setWrongRoomNumber(true);\n    }\n  };\n\n  const onModalSubmit = () => {\n    setInPath(true);\n    setNextDirection(route[0]);\n\n    const data = {\n      type: 'to.robot',\n      message: {\n        type: 'start',\n        room: roomNumber,\n        route: route,\n      }\n    };\n    \n    UISocket.send(JSON.stringify(data));\n    setIsModalOpen(false);\n  };\n\n  return(\n    <div className=\"room-page\">\n      <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginBottom: \"10px\"}}>\n        <Button style={{margin: \"0.1rem\"}} onClick={() => sendHelllo(\"UI\")}> Client Message </Button>\n        <Button style={{margin: \"0.1rem\"}} onClick={() => sendHelllo(\"Robot\")}> Robot Message </Button>    \n      </div>\n\n      {isModalOpen && (\n        <Modal\n          open={isModalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          onRequestSubmit={() => onModalSubmit()}\n          modalHeading=\"Confirmar destino\"\n          primaryButtonText=\"Submit\"\n        >\n          <div> \n            <h1>Ir a la habitación {roomNumber}?</h1>\n            <img src=\"https://i.etsystatic.com/17441626/r/il/362050/1469060776/il_fullxfull.1469060776_e867.jpg\" alt='room'/>\n          </div>\n        </Modal>\n      )}\n\n      <Tile className=\"room-page__content\">\n        {roomNumber === \"\" ? <h3>Introduce el número de habitación</h3> : <h3>Habitación: {roomNumber}</h3>}\n        {wrongRoomNumber && <h3 style={{color: \"red\"}}>No existe la habitación</h3>}\n        {/* <TextInput id=\"room-number\" type=\"text\" value={roomNumber} placeholder=\"Nº de habitación\" disabled/> */}\n\n        {!inPath ?\n          <RoomInput onSubmit={() => onRoomSubmit()} onChange={(room) => {setRoomNumber(room); setWrongRoomNumber(false);}} value={roomNumber} />\n        :\n          <div>\n            <h4>En el próximo cruce: {nextDirection.split(\".\")[0]}</h4>\n            {nextDirection.startsWith('recto') && <AiOutlineArrowUp style={{ width: \"75%\", height: \"75%\", fill: \"green\"}}/>}\n            {nextDirection.startsWith('derecha') && <AiOutlineArrowRight style={{ width: \"75%\", height: \"75%\", fill: \"green\"}}/>}\n            {nextDirection.startsWith('atras') && <AiOutlineArrowDown style={{ width: \"75%\", height: \"75%\", fill: \"green\"}}/>}\n            {nextDirection.startsWith('izquierda') && <AiOutlineArrowLeft style={{ width: \"75%\", height: \"75%\", fill: \"green\"}}/>}\n          </div>\n        }\n      </Tile>\n    </div>\n  )\n};\n\nexport default RoomPage;\n","\r\nimport \"./Crono.css\";\r\n\r\nimport { useEffect, useReducer } from \"react\";\r\n\r\nconst stopWatchState = {\r\n  running: false,\r\n  currentTime: 0,\r\n  lastTime: 0\r\n};\r\nfunction stopWatchReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"reset\":\r\n      return { running: false, currentTime: 0, lastTime: 0 };\r\n    case \"start\":\r\n      return { ...state, running: true, lastTime: Date.now() };\r\n    case \"stop\":\r\n      return { ...state, running: false };\r\n    case \"tick\":\r\n      if (!state.running) return state;\r\n      return {\r\n        ...state,\r\n        currentTime: state.currentTime + (Date.now() - state.lastTime),\r\n        lastTime: Date.now()\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction timeConverter(duration) {\r\n  let date = new Date(duration);\r\n  let hours = date.getHours() + date.getTimezoneOffset() / 60;\r\n  let minutes = date.getMinutes();\r\n  let seconds = date.getSeconds();\r\n  let milliseconds = date.getMilliseconds();\r\n  hours = hours.toString().padStart(2, \"0\");\r\n  minutes = minutes.toString().padStart(2, \"0\");\r\n  seconds = seconds.toString().padStart(2, \"0\");\r\n  milliseconds = milliseconds.toString().padStart(3, \"0\");\r\n\r\n  return {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    milliseconds\r\n  };\r\n}\r\n\r\n\r\nexport default function Crono() {\r\n  const [state, dispatch] = useReducer(stopWatchReducer, stopWatchState);\r\n  const time = timeConverter(state.currentTime);\r\n\r\n  useEffect(() => {\r\n    let frame;\r\n    function tick() {\r\n      dispatch({ type: \"tick\" });\r\n      frame = requestAnimationFrame(tick);\r\n    }\r\n    frame = requestAnimationFrame(tick);\r\n\r\n    return () => cancelAnimationFrame(frame);\r\n  }, []);\r\n\r\n  /*if (cuenta){\r\n    console.log(\"EI\");\r\n    const contar = (e)=>{\r\n      dispatch({type:\"start\"});\r\n    }\r\n    contar();\r\n  }*/\r\n\r\n  return (\r\n    <div className=\"ppal\">\r\n      <div className=\"text\"> Tiempo en ruta : </div>\r\n      <span className=\"timer\">\r\n        {time.hours}:{time.minutes}:{time.seconds}.{time.milliseconds}\r\n      </span>\r\n      <div className=\"p-4 space-x-4 \">\r\n        <button id=\"restart\" hidden\r\n          onClick={() => dispatch({ type: \"reset\" })}\r\n          className=\"bg-yellow-500 border-4 border-yellow-700 rounded-full w-16 h-16 hover:bg-yellow-600\"\r\n        >\r\n          Reset{\" \"}\r\n        </button>\r\n        {!state.running ? (\r\n          <button id=\"start\" hidden\r\n            onClick={() => dispatch({ type: \"start\" })}\r\n            className=\"bg-green-500 border-4 border-green-700 rounded-full w-16 h-16 hover:bg-green-600\"\r\n          >\r\n            start{\" \"}\r\n          </button>\r\n        ) : (\r\n          <button id=\"stop\" hidden\r\n            onClick={() => dispatch({ type: \"stop\" })}\r\n            className=\"bg-red-500 border-4 border-red-700 rounded-full w-16 h-16 hover:bg-red-600\"\r\n          >\r\n            stop{\" \"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport Konva from 'konva';\nimport stage from './stage.json';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\nimport {UISocket } from '../../sockets';\nimport Crono from '../Crono/Crono';\n\nlet halls=[];\n\nconst Dashboard = () => {\n  const stageRef = React.useRef(null);\n  const rectRef = React.useRef(null);\n  const [hall, setHall]=React.useState(0);\n  var hallsId=[];\n  var cont_inic=true;\n  var cont_parar=false;\n  for (let i = 0; i < halls.length; i++) {\n    hallsId[i]=\"hall\"+halls[i];\n  }\n\n  UISocket.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    console.log(\"UISocket Received: \", data);\n    if(data.hall!==undefined){\n      rectRef.current.opacity(1);\n      setHall(data.hall);\n      halls.push(data.hall);\n    }\n    if (data.active!==undefined && data.active && cont_inic){\n      console.log(\"Comenzamos\");\n      document.getElementById(\"start\").click();\n      cont_inic=!cont_inic;\n      cont_parar=!cont_parar;\n\n    }\n    else if(data.active!==undefined && !data.active && cont_parar) {\n      console.log(\"Paramos\");\n      document.getElementById(\"stop\").click();\n      cont_parar=!cont_parar;\n      cont_inic=!cont_inic;\n    }\n  };\n\n  \n\n\n\n  React.useEffect(() => {\n    console.log(rectRef);\n    if (rectRef.current !== null) {\n      var period = 300;\n  \n      const anim = new Konva.Animation(frame => {\n        if (rectRef.current !== null) {\n          rectRef.current.opacity((Math.sin(frame.time / period) + 1) / 2);\n        }\n          \n      }, rectRef.current.getLayer());\n  \n      anim.start();\n      return () => {\n        anim.stop();        \n      }; \n    }\n  }, []);\n  \n  return (\n    <>\n    <Crono></Crono>\n    <Stage width={stage.stageWidth} height={stage.stageHeight} ref={stageRef}>\n      {stage.layers.map((layer, index) => {\n        const hallId = \"hall\" + hall;\n        return (\n          <Layer key={index}>\n            {layer.elements.map((element, index) => {\n              if (element.type === \"Rect\") {\n                let inPath = false;\n                inPath = hallsId.find((el) => element.attrs.id === el) ? true : false;\n                inPath = inPath ? true : element.attrs.id === hallId;\n                if (element.attrs.id === \"hall0\")\n                  inPath = false; //Si es el HALL inicial lo dejamos en cian\n                if (hallId === \"hall0\" && halls.length !== 0) {\n                  halls.splice(0, halls.length);\n                  hallsId.splice(0, hallsId.length); //Al volver al HALL (id=\"hall0\") vaciamos array de halls -> \"reiniciamos\"\n                }\n                return <Rect key={index} {...element.attrs} fill={inPath === true ? \"green\" : element.attrs.fill} ref={element.attrs.id === hallId ? rectRef : null} />;\n              } else if (element.type === \"Text\") {\n                return <Text key={index} {...element.attrs} />;\n              }\n\n              return null;\n            })}\n          </Layer>\n        );\n      }\n      )}\n    </Stage></>\n  );\n};\n\nexport default Dashboard;","import Dashboard from \"./Dashboard\";\nexport default Dashboard;","import React from 'react';\nimport { Rect, Transformer } from 'react-konva';\n\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <Rect\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x() > 0 ? e.target.x() : 0,\n            y: e.target.y() > 0 ? e.target.y() : 0,\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Rectangle;","import React from 'react';\nimport './dashboard.scss';\n\nimport { Button, Checkbox, TextInput } from 'carbon-components-react';\n\nimport { Stage, Layer, Text } from 'react-konva';\nimport Rectangle from './Rectangle';\n\n\nconst defaultTextProps = {\n  type: \"Text\",\n  x: 100,\n  y: 100,\n  text: 'Hello World',\n  fontSize: 16,\n  fill: \"black\",\n};\n\nconst defaultRoomProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 100,\n  height: 100,\n  fill: 'purple',\n};\n\nconst defaultHallProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 30,\n  height: 100,\n  fill: 'black',\n};\n\nconst defaultStickerProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 30,\n  height: 30,\n  fill: 'blue',\n};\n\nconst DashboardDev = () => {\n  // Stage refence to export map to JSON\n  const stageRef = React.useRef();\n\n  // List of shapes in the stage and selected shape id\n  const [shapes, setShapes] = React.useState([]);\n  const [selectedShape, selectShape] = React.useState();\n  const [newTextData, setNewTextData] = React.useState('');\n  const [stickerColor, setStickerColor] = React.useState('blue');\n  const [hallOrientation, setHallOrientation] = React.useState('vertical');\n\n  function downloadJSON(object, name) {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(object, null, 2));\n    var link = document.createElement('a');\n    link.download = name;\n    link.href = dataStr;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  const exportCanvasToJSON = () => {\n    const stage = stageRef.current;\n    const stageLayers = stage.children;\n\n    // For each layer we are going to save the attrs of its childrens\n    const layers = stageLayers.map((layer, index) => {\n      const layerElements = layer.children;\n      const layerElementsAttrs = layerElements.filter(element => element.className !== \"Transformer\").map(element => {\n        if (element.className === \"Rect\") {\n          return {\n            type: element.className,\n            attrs: {\n              id: element.id(),\n              x: element.x(),\n              y: element.y(),\n              width: element.width(),\n              height: element.height(),\n              fill: element.fill(),\n            }\n          }\n        } else if (element.className === \"Text\") {\n          return {\n            type: element.className,\n            attrs: {\n              id: element.id(),\n              x: element.x(),\n              y: element.y(),\n              text: element.text(),\n              fontSize: element.fontSize(),\n              fill: element.fill(),\n            }\n          }\n        }\n        return null;\n      });\n\n      return {\n        layer: \"layer\" + index,\n        elements: layerElementsAttrs\n      }\n    });\n\n    const exportedStage = {\n      stageWidth: stage.width(),\n      stageHeight: stage.height(),\n      layers: layers,\n    }\n\n    downloadJSON(exportedStage, \"stage.json\");\n  };\n\n  function appendShape(type) {\n    if (type === 'room') {\n      const newRect = {\n        id: \"room\" + shapes.filter(shape => shape.id.startsWith('room')).length,\n        ...defaultRoomProps,\n      };\n\n      setShapes([...shapes, newRect]);\n    } else if (type === 'text') {\n      const newText = {\n        id: \"text\" + shapes.filter(shape => shape.id.startsWith('text')).length,\n        ...defaultTextProps,\n      };\n\n      if (newTextData !== '') {\n        newText.text = newTextData;\n        setNewTextData('');\n      }\n\n      setShapes([...shapes, newText]);\n    } else if (type === 'hall') {\n      const newRect = {\n        id: \"hall\" + shapes.filter(shape => shape.id.startsWith('hall')).length,\n        ...defaultHallProps,\n      };\n      if (hallOrientation === 'vertical') {\n        // Default vertical hall\n      } else {\n        // Default horizontal hall\n        const width = newRect.width;\n        newRect.width = newRect.height;\n        newRect.height = width;\n      }\n\n      setShapes([...shapes, newRect]);\n    } else if (type === 'sticker') {\n      const newRect = {\n        id: \"sticker\" + shapes.filter(shape => shape.id.startsWith('sticker')).length,\n        ...defaultStickerProps,\n      };\n      newRect.fill = stickerColor;\n\n      setShapes([...shapes, newRect]);\n    }\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"1rem\" }}>\n      <div style={{ display: \"flex\", flexDirection: \"column\", marginRight: \"1rem\" }}>\n        <Button onClick={() => appendShape(\"room\")} style={{margin: \"1px\"}}>New Room</Button>\n        <Button onClick={() => appendShape(\"hall\")} style={{margin: \"1px\"}}>New Hall</Button>\n        <div>\n          <Checkbox id=\"cb-vertical\" labelText=\"Vertical\" onChange={() => setHallOrientation(\"vertical\")} checked={hallOrientation === \"vertical\"} />\n          <Checkbox id=\"cb-horizontal\" labelText=\"Horizontal\" onChange={() => setHallOrientation(\"horizontal\")} checked={hallOrientation === \"horizontal\"} />\n        </div>\n        <Button onClick={() => appendShape(\"sticker\")} style={{margin: \"1px\"}}>New Sticker</Button>\n        <div>\n          <Checkbox id=\"cb-blue\" labelText=\"Blue\" onClick={() => setStickerColor(\"blue\")} checked={stickerColor === \"blue\"} />\n          <Checkbox id=\"cb-red\" labelText=\"Red\" onClick={() => setStickerColor(\"red\")} checked={stickerColor === \"red\"} />\n        </div>\n        <Button onClick={() => appendShape(\"text\")} style={{margin: \"1px\"}}>New Text</Button>\n        <div>\n          <TextInput id=\"text-input\" labelText=\"\" placeholder=\"Hello World\" onChange={(e) => setNewTextData(e.target.value)} value={newTextData}/>\n        </div>\n        <Button onClick={() => setShapes(shapes.slice(0, shapes.length-1))} style={{margin: \"1px\"}}>Del Last</Button>\n        <Button onClick={() => exportCanvasToJSON()} style={{margin: \"1px\"}}>Export</Button>\n        {stageRef.current &&\n          <>\n            <div>Stage width: {stageRef.current.width()}</div>\n            <div>Stage height: {stageRef.current.height()}</div>\n          </>\n        }\n      </div>\n\n      <div style={{ border: \"1px solid\" }}>\n        <Stage width={1280} height={720} ref={stageRef}>\n          <Layer>\n            {shapes.map((shape, index) => {\n              const isSelected = selectedShape === shape.id;\n              if (shape.type === \"Rect\") {\n                return (\n                  <Rectangle\n                    key={shape.id}\n                    shapeProps={shape}\n                    onSelect={() => {\n                      if (selectedShape === shape.id) {\n                        selectShape(null);\n                      } else {\n                        selectShape(shape.id);\n                      }\n                    }}\n                    onChange={(newShape) => {\n                      setShapes(shapes.map((s) => (s.id === shape.id ? newShape : s)));\n                    }}\n                    isSelected={isSelected}\n                  />\n                );\n              }\n              return null;\n            })}\n          </Layer>\n\n          <Layer>\n            {shapes.map((shape, index) => {\n              const isSelected = selectedShape === shape.id;\n              if (shape.type === \"Text\") {\n                return (\n                  <Text\n                    key={shape.id}\n                    draggable\n                    {...shape}\n                    isSelected={isSelected}\n                    onClick={() => {\n                      if (selectedShape === shape.id) {\n                        // Change color of the selected shape\n                        const colors = ['red', 'black', 'white'];\n                        const current = colors.indexOf(shape.fill);\n                        const next = (current + 1) % colors.length;\n                        shape.fill = colors[next];\n                        selectShape(null);\n                      } else {\n                        selectShape(shape.id);\n                      }\n                    }}\n                  />\n                );\n              }\n              return null;\n            })}\n          </Layer>\n        </Stage>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardDev;","import { useTable, useSortBy } from \"react-table\";\nimport useRows from \"./hooks/useRows\";\nimport useColumns from \"./hooks/useColumns\";\n\nimport \"./styles.css\";\n\nexport default function Stats() {\n  const columns = useColumns();\n  const data = useRows();\n  const table = useTable({ columns, data }, useSortBy);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n\n  return (\n    <div className=\"container\">\n      {/* Aplicamos las propiedades de la tanña */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Aplicamos las propiedades de ordenación a cada columna\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? \"desc\"\n                        : \"asc\"\n                      : \"\"\n                  }\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        {/* Aplicamos las propiedades de la tabla */}\n        <tbody {...getTableBodyProps()}>\n          {\n            // Bucle sobre las filas\n            rows.map((row) => {\n              // Prepara la fila para mostrar\n              prepareRow(row);\n              return (\n                // Aplicamos las propiedades de las columnas\n                <tr {...row.getRowProps()}>\n                  {\n                    // Bucle sobre las celdas\n                    row.cells.map((cell) => {\n                      // Aplicamos las propiedades de las celdas\n                      return (\n                        <td {...cell.getCellProps()}>\n                          {\n                            cell.render(\"Cell\")\n                          }\n                        </td>\n                      );\n                    })\n                  }\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\n\nexport default function useColumns() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ROBOT\",\n        accessor: \"robot\"\n      },\n      {\n        Header: \"DESTINO\",\n        accessor: \"destino\"\n      },\n      {\n        Header: \"HORA SALIDA\",\n        accessor: \"salida\"\n      },\n      {\n        Header: \"HORA LLEGADA\",\n        accessor: \"llegada\"\n      }\n    ],\n    []\n  );\n\n  return columns;\n}","import { useMemo } from \"react\";\n\nexport default function useRows() {\n  const rows = useMemo(\n    () => [\n      {\n        robot: \"Picar-S\",\n        destino: \"Room 2\",\n        salida: \"12/03/2021 12:05:48\",\n        llegada: \"12/03/2021 12:07:36\"\n      },\n      {\n        robot: \"Picar-S\",\n        destino: \"Room 7\",\n        salida: \"10/03/2021 14:36:12\",\n        llegada: \"10/03/2021 14:38:43\"\n      },\n      {\n        robot: \"Picar-S\",\n        destino: \"Room 4\",\n        salida: \"11/03/2021 11:23:33\",\n        llegada: \"11/03/2021 11:26:54\"\n      },\n      {\n        robot: \"Picar-S\",\n        destino: \"Room 1\",\n        salida: \"11/03/2021 11:33:33\",\n        llegada: \"11/03/2021 11:35:54\"\n      }\n    ],\n    []\n  );\n\n  return rows;\n}\n","// import logo from './logo.svg';\nimport React from 'react';\n\nimport './App.scss';\nimport PageHeader from './components/PageHeader';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { Content } from 'carbon-components-react';\n\nimport RoomPage from './content/RoomPage';\n\nimport Dashboard from './content/Dashboard';\nimport DashboardDev from './content/Dashboard/DashboardDev';\nimport Stats from './content/Stats/Stats';\n\nfunction App() {\n  return (\n    <>\n      <PageHeader/>\n      <Content>\n        <div className=\"room-page__header\">\n          <h1>GuiaMe: Automated Guiding Robot</h1>\n          <p>Un guía de confianza para gente de todo tipo</p>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/mapdev\" component={DashboardDev} />\n          <Route exact path=\"/room\" component={RoomPage} />\n          <Route exact path=\"/stats\" component={Stats} />\n        </Switch>\n      </Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer =\n  createStore => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      const start = performance.now()\n      const newState = reducer(state, action)\n      const end = performance.now()\n      const diff = round(end - start)\n\n      console.log('Reducer process time:', diff)\n\n      return newState\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n  }\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('Dispatching', action)\n    let result = next(action)\n    console.log('Next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default logger","// Create a \"reducer\" function that determines what the new state\n// should be when something happens in the app\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\nfunction fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;","import { applyMiddleware, compose, createStore, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducer'\nimport loggerMiddleware from './middleware/logger'\n\nimport counterReducer from './reducers/counterReducer'\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n})\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n\n  let composedEnhancers = null\n  if (process.env.NODE_ENV === 'development') {\n    composedEnhancers = composeWithDevTools(...enhancers)\n  } else {\n    composedEnhancers = compose(...enhancers)\n  }\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept(rootReducer, () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}","import App from './App';\nimport './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store'\n\nconst store = configureStore()\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById('root')\n  )\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./App', renderApp)\n  }\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}