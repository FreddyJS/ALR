{"version":3,"sources":["components/PageHeader/index.js","components/PageHeader/PageHeader.js","content/RoomPage/robot.png","sockets.js","services/routes.js","components/RoomInput/index.js","components/RoomInput/RoomInput.js","content/RoomPage/index.js","content/RoomPage/RoomPage.js","content/Dashboard/background.png","content/Crono/Crono.js","content/Dashboard/Dashboard.js","content/Dashboard/index.js","content/Dashboard/Rectangle.js","content/Dashboard/DashboardDev.js","content/Stats/StatsHalls.js","content/Stats/hooks/useColumns2.js","content/Stats/StatsRoutes.js","content/Stats/hooks/useColumns.js","content/Stats/Stats.js","App.js","reportWebVitals.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/counterReducer.js","store.js","index.js"],"names":["PageHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","RobotSocket","WebSocket","onmessage","event","data","JSON","parse","console","log","UISocket","getRoutes","a","axios","get","process","response","RoomInput","onSubmit","onChange","value","className","Button","RoomPage","React","useState","roomNumber","setRoomNumber","isModalOpen","setIsModalOpen","wrongRoomNumber","setWrongRoomNumber","route","setRoute","inPath","setInPath","nextDirection","setNextDirection","onRoomSubmit","routes","find","r","dest_room","origin_room","Modal","open","onRequestClose","onRequestSubmit","type","message","room","send","stringify","onModalSubmit","modalHeading","primaryButtonText","src","alt","Tile","style","color","split","startsWith","width","height","fill","robot","stopWatchState","running","currentTime","lastTime","stopWatchReducer","state","action","Date","now","Crono","useReducer","dispatch","time","duration","date","hours","getHours","getTimezoneOffset","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","toString","padStart","timeConverter","useEffect","frame","requestAnimationFrame","tick","cancelAnimationFrame","id","hidden","dSocket","halls","Dashboard","hallId","setHallId","active","setActive","stageRef","useRef","rectRef","backgroundImage","window","Image","background","time2","undefined","hall","current","opacity","push","document","getElementById","click","textContent","requestOptions","method","headers","body","robot_id","destiny","miliseconds","fetch","then","json","error","anim","Konva","Animation","Math","sin","getLayer","start","stop","stage","stageWidth","stageHeight","ref","layers","map","layer","index","image","elements","attrs","length","splice","Rectangle","shapeProps","isSelected","onSelect","shapeRef","trRef","nodes","batchDraw","Fragment","onTap","draggable","onDragEnd","e","x","target","y","onTransformEnd","node","scaleX","scaleY","max","boundBoxFunc","oldBox","newBox","defaultTextProps","text","fontSize","defaultRoomProps","defaultHallProps","defaultStickerProps","DashboardDev","shapes","setShapes","selectedShape","selectShape","newTextData","setNewTextData","stickerColor","setStickerColor","hallOrientation","setHallOrientation","exportCanvasToJSON","children","filter","object","name","dataStr","encodeURIComponent","link","createElement","download","href","appendChild","removeChild","downloadJSON","appendShape","newRect","shape","newText","display","flexDirection","marginTop","textAlign","justifyContent","s","TextInput","labelText","placeholder","new_id","new_width","new_height","new_x","new_y","new_color","new_shapes","parseInt","marginLeft","padding","marginRight","margin","Checkbox","checked","slice","border","newShape","colors","next","indexOf","StatsHalls","loadingData","setLoadingData","setData","getData","columns","useMemo","accessor","table","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","StatsRoutes","Stats","App","location","includes","Content","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","performance","newState","end","diff","round","logger","store","group","info","result","getState","groupEnd","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","createSlice","status","reducers","increment","decrement","incrementByAmount","payload","extraReducers","builder","addCase","pending","fulfilled","actions","rootReducer","combineReducers","counter","counterReducer","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","compose","configureStore","ReactDOM"],"mappings":"8YACeA,ECsBI,kBACjB,cAACC,EAAA,EAAD,CACEC,OAAQ,gBAAGC,EAAH,EAAGA,kBAAmBC,EAAtB,EAAsBA,qBAAtB,OACN,eAACC,EAAA,EAAD,CAAQ,aAAW,SAAnB,UACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACE,aAAW,YACXC,QAASJ,EACTK,SAAUN,IAEZ,cAACO,EAAA,EAAD,CAAYC,QAASC,IAAMC,GAAG,IAAIC,OAAO,MAAzC,oBAGA,eAACC,EAAA,EAAD,CAAkB,aAAW,SAA7B,UACE,cAACC,EAAA,EAAD,CAAgBL,QAASC,IAAMC,GAAG,QAAlC,uBACA,cAACG,EAAA,EAAD,CAAgBL,QAASC,IAAMC,GAAG,UAAlC,wBACA,cAACG,EAAA,EAAD,CAAgBL,QAASC,IAAMC,GAAG,SAAlC,gCAEF,cAACI,EAAA,EAAD,CACE,aAAW,kBACXC,SAAUf,EACVgB,cAAc,EAHhB,SAIE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACI,cAACL,EAAA,EAAD,CAAgBL,QAASC,IAAMC,GAAG,QAAlC,uBAGA,cAACG,EAAA,EAAD,CAAgBL,QAASC,IAAMC,GAAG,UAAlC,wBAGA,cAACG,EAAA,EAAD,CAAgBL,QAASC,IAAMC,GAAG,SAAlC,oCAMR,eAACS,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAoB,aAAW,gBAA/B,SACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,CAAoB,aAAW,cAA/B,SACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,CAAoB,aAAW,eAA/B,SACI,cAAC,IAAD,gB,kDCnED,MAA0B,kCCAnCC,EAAc,IAAIC,UAAU,2CAClCD,EAAYE,UAAY,SAACC,GACvB,IAAMC,EAAOC,KAAKC,MAAMH,EAAMC,MAC9BG,QAAQC,IAAI,yBAA0BJ,IAGxC,IAAMK,EAAW,IAAIR,UAAU,0CAC/BQ,EAASP,UAAY,SAACC,GACpB,IAAMC,EAAOC,KAAKC,MAAMH,EAAMC,MAC9BG,QAAQC,IAAI,sBAAuBJ,IAGrC,I,4CCRMM,EAAS,uCAAG,4BAAAC,EAAA,sEACOC,IAAMC,IAAN,UAHTC,mCAGS,WADP,cACVC,EADU,yBAETA,EAASX,MAFA,2CAAH,qDCHAY,G,OCKG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACvC,OACE,sBAAKC,UAAU,sBAAf,UACM,sBAAKA,UAAU,0BAAf,UACE,cAACC,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,kBAEF,sBAAKC,UAAU,0BAAf,UACE,cAACC,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,kBAEF,sBAAKC,UAAU,0BAAf,UACE,cAACC,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,kBAEF,sBAAKC,UAAU,0BAAf,UACE,cAACC,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAAS,KAAvE,mBACA,cAACG,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMkC,EAASC,EAAQ,MAA/E,eACA,cAACE,EAAA,EAAD,CAAQD,UAAU,6BAA6BpC,QAAS,kBAAMiC,KAA9D,wB,QC1BGK,ECSE,WACf,IACA,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCH,IAAMC,UAAS,GAArD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8CL,IAAMC,UAAS,GAA7D,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA0BP,IAAMC,WAAhC,mBAAOO,EAAP,KAAcC,EAAd,KAEA,EAA4BT,IAAMC,UAAS,GAA3C,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA0CX,IAAMC,SAAS,IAAzD,mBAAOW,EAAP,KAAsBC,EAAtB,KAeMC,EAAY,uCAAG,8BAAA1B,EAAA,sEACED,IADF,OACb4B,EADa,QAEbP,EAAQO,EAAOC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,YAAchB,GAAgC,SAAlBe,EAAEE,iBAG7DnC,QAAQC,IAAI,SAAUuB,GACtBC,EAASD,GACTH,GAAe,IAEfE,GAAmB,GATF,2CAAH,qDA8BlB,OACE,sBAAKV,UAAU,YAAf,WArDY,EA6DTO,GACC,cAACgB,EAAA,EAAD,CACEC,KAAMjB,EACNkB,eAAgB,kBAAMjB,GAAe,IACrCkB,gBAAiB,kBA9BH,WACpBZ,GAAU,GACVE,EAAiBL,EAAMA,MAAM,IAE7B,IAAM3B,EAAO,CACX2C,KAAM,WACNC,QAAS,CACPD,KAAM,QACNE,KAAMxB,EACNM,MAAOA,IAIXtB,EAASyC,KAAK7C,KAAK8C,UAAU/C,IAC7BwB,GAAe,GAgBcwB,IACvBC,aAAa,oBACbC,kBAAkB,SALpB,SAOE,gCACE,wDAAwB7B,EAAxB,OACA,qBAAK8B,IAAI,4FAA4FC,IAAI,cAK/G,eAACC,EAAA,EAAD,CAAMrC,UAAU,qBAAhB,UACkB,KAAfK,EAAoB,yEAA6C,iDAAiBA,KAClFI,GAAmB,oBAAI6B,MAAO,CAACC,MAAO,OAAnB,wCAGlB1B,EAGA,gCACE,0DAAyB,iCAASE,EAAcyB,MAAM,KAAK,QAC1DzB,EAAc0B,WAAW,UAAY,cAAC,IAAD,CAAkBH,MAAO,CAAEI,MAAO,MAAOC,OAAQ,MAAOC,KAAM,WACnG7B,EAAc0B,WAAW,YAAc,cAAC,IAAD,CAAqBH,MAAO,CAAEI,MAAO,MAAOC,OAAQ,MAAOC,KAAM,WACxG7B,EAAc0B,WAAW,UAAY,cAAC,IAAD,CAAoBH,MAAO,CAAEI,MAAO,MAAOC,OAAQ,MAAOC,KAAM,WACrG7B,EAAc0B,WAAW,cAAgB,cAAC,IAAD,CAAoBH,MAAO,CAAEI,MAAO,MAAOC,OAAQ,MAAOC,KAAM,cAP5G,cAAC,EAAD,CAAW/C,SAAU,kBAAMoB,KAAgBnB,SAAU,SAAC+B,GAAUvB,EAAcuB,GAAOnB,GAAmB,IAAUX,MAAOM,OAY7H,qBAAK8B,IAAKU,EAAOT,IAAI,c,wBCzGZ,MAA0B,uC,QCKnCU,G,OAAiB,CACrBC,SAAS,EACTC,YAAa,EACbC,SAAU,IAEZ,SAASC,EAAiBC,EAAOC,GAC/B,OAAQA,EAAOzB,MACb,IAAK,QACH,MAAO,CAAEoB,SAAS,EAAOC,YAAa,EAAGC,SAAU,GACrD,IAAK,QACH,OAAO,2BAAKE,GAAZ,IAAmBJ,SAAS,EAAME,SAAUI,KAAKC,QACnD,IAAK,OACH,OAAO,2BAAKH,GAAZ,IAAmBJ,SAAS,IAC9B,IAAK,OACH,OAAKI,EAAMJ,QACJ,2BACFI,GADL,IAEEH,YAAaG,EAAMH,aAAeK,KAAKC,MAAQH,EAAMF,UACrDA,SAAUI,KAAKC,QAJUH,EAM7B,QACE,OAAOA,GAsBE,SAASI,IACtB,MAA0BC,qBAAWN,EAAkBJ,GAAvD,mBAAOK,EAAP,KAAcM,EAAd,KACMC,EArBR,SAAuBC,GACrB,IAAIC,EAAO,IAAIP,KAAKM,GAChBE,EAAQD,EAAKE,WAAaF,EAAKG,oBAAsB,GACrDC,EAAUJ,EAAKK,aACfC,EAAUN,EAAKO,aACfC,EAAeR,EAAKS,kBAMxB,OALAR,EAAQA,EAAMS,WAAWC,SAAS,EAAG,KACrCP,EAAUA,EAAQM,WAAWC,SAAS,EAAG,KAIlC,CACLL,QAJFA,EAAUA,EAAQI,WAAWC,SAAS,EAAG,KAKvCP,UACAH,QACAO,aANFA,EAAeA,EAAaE,WAAWC,SAAS,EAAG,MAYtCC,CAAcrB,EAAMH,aAajC,OAXAyB,qBAAU,WACR,IAAIC,EAOJ,OAFAA,EAAQC,uBAJR,SAASC,IACPnB,EAAS,CAAE9B,KAAM,SACjB+C,EAAQC,sBAAsBC,MAIzB,kBAAMC,qBAAqBH,MACjC,IAGD,sBAAK1E,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,gCACA,uBAAMA,UAAU,QAAQ8E,GAAG,QAA3B,UACGpB,EAAKG,MADR,IACgBH,EAAKM,QADrB,IAC+BN,EAAKQ,QADpC,IAC8CR,EAAKU,gBAEnD,gCACE,yBAAQU,GAAG,UAAUC,QAAM,EACzBnH,QAAS,kBAAM6F,EAAS,CAAE9B,KAAM,WADlC,kBAGQ,OAENwB,EAAMJ,QAON,yBAAQ+B,GAAG,OAAOC,QAAM,EACtBnH,QAAS,kBAAM6F,EAAS,CAAE9B,KAAM,UADlC,iBAGO,OATP,yBAAQmD,GAAG,QAAQC,QAAM,EACvBnH,QAAS,kBAAM6F,EAAS,CAAE9B,KAAM,WADlC,kBAGQ,aCtElB,IAAMqD,ERIG,IAAInG,UAAU,2CQHnBoG,EAAQ,GCTGC,EDWG,WAChB,MAA4B/E,IAAMC,SAAS,QAA3C,mBAAO+E,EAAP,KAAeC,EAAf,KACA,EAA4BjF,IAAMC,UAAS,GAA3C,mBAAOiF,EAAP,KAAeC,EAAf,KACMC,EAAWpF,IAAMqF,OAAO,MACxBC,EAAUtF,IAAMqF,OAAO,MAEvBE,EAAkB,IAAIC,OAAOC,MACnCF,EAAgBvD,IAAM0D,EAEtB,IAAInC,EAAO,GACPoC,EAAQ,GAiEZ,OA/DAd,EAAQlG,UAAY,SAACC,GACnB,IAAMC,EAAOC,KAAKC,MAAMH,EAAMC,MAS9B,GARAG,QAAQC,IAAI,uBAAwBJ,QAElB+G,IAAd/G,EAAKgH,OACPP,EAAQQ,QAAQC,QAAQ,GACxBjB,EAAMkB,KAAKnH,EAAKgH,MAChBZ,EAAUpG,EAAKgH,YAGGD,IAAhB/G,EAAKqG,QAAwBrG,EAAKqG,SAAWA,EAC/CC,GAAU,GACVc,SAASC,eAAe,WAAWC,QACnCF,SAASC,eAAe,SAASC,aAE5B,QAAoBP,IAAhB/G,EAAKqG,SAAyBrG,EAAKqG,QAAUA,EAAQ,CAC9DC,GAAU,GACVL,EAAQ,GACRG,EAAU,QACVgB,SAASC,eAAe,QAAQC,QAChC,IAAI/G,EAAI6G,SAASC,eAAe,SAASE,YACzC7C,EAAOnE,EAAEiD,MAAM,KACfsD,EAAQpC,EAAK,GAAGlB,MAAM,KAEtB,IAAIgE,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM1H,KAAK8C,UAAU,CAAE6E,SAAU,MAAOC,QAAS7H,EAAK2B,MAAMU,UAAW2C,QAASN,EAAK,GAAIQ,QAAS4B,EAAM,GAAIgB,YAAahB,EAAM,MAGjI,IACEiB,MACE,yCAA0CP,GACzCQ,MAAK,SAAArH,GACJA,EAASsH,UAGf,MAAOC,GACL/H,QAAQ+H,MAAMA,MAMpB/G,IAAMsE,WAAU,WAEd,GADAtF,QAAQC,IAAIqG,GACY,OAApBA,EAAQQ,QAAkB,CAC5B,IAEMkB,EAAO,IAAIC,IAAMC,WAAU,SAAA3C,GACP,OAApBe,EAAQQ,SACVR,EAAQQ,QAAQC,SAASoB,KAAKC,IAAI7C,EAAMhB,KAJ/B,KAIgD,GAAK,KAG/D+B,EAAQQ,QAAQuB,YAGnB,OADAL,EAAKM,QACE,WACLN,EAAKO,WAGR,IAGD,qCACE,cAAC,EAAD,CAAO5C,GAAG,UACV,cAAC,IAAD,CAAOpC,MAAOiF,EAAMC,WAAYjF,OAAQgF,EAAME,YAAaC,IAAKvC,EAAhE,SACGoC,EAAMI,OAAOC,KAAI,SAACC,EAAOC,GACxB,OACE,eAAC,IAAD,WACa,IAAVA,GAAe,cAAC,IAAD,CAAOC,MAAOzC,EAAiBhD,MAAO,KAAMC,OAAQ,MAEnEsF,EAAMG,SAASJ,KAAI,SAACjK,EAASmK,GAC5B,GAAqB,SAAjBnK,EAAQ4D,KAAiB,CAC3B,IAAId,GAAS,EAUb,OARAA,GADAA,IAASoE,EAAM9D,MAAK,SAAC6E,GAAD,OAAUjI,EAAQsK,MAAMvD,KAAOkB,OAChCjI,EAAQsK,MAAMvD,KAAOK,EAEf,SAArBpH,EAAQsK,MAAMvD,KAChBjE,GAAS,GACI,SAAXsE,GAAsC,IAAjBF,EAAMqD,SAC7BrD,EAAMsD,OAAO,EAAGtD,EAAMqD,QACtBrD,EAAMsD,OAAO,EAAGtD,EAAMqD,SAEjB,cAAC,IAAD,2BAAsBvK,EAAQsK,OAA9B,IAAqCzF,MAAiB,IAAX/B,EAAkB,QAAU9C,EAAQsK,MAAMzF,KAAMkF,IAAK/J,EAAQsK,MAAMvD,KAAOK,EAASM,EAAU,OAA7HyC,GACb,MAAqB,SAAjBnK,EAAQ4D,KACV,cAAC,IAAD,eAAsB5D,EAAQsK,OAAnBH,GAGb,UApBCA,Y,oCEzBTM,GAjEG,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,SAAU7I,EAAe,EAAfA,SAC/C8I,EAAWzI,IAAMqF,SACjBqD,EAAQ1I,IAAMqF,SAUpB,OARArF,IAAMsE,WAAU,WACViE,IAEFG,EAAM5C,QAAQ6C,MAAM,CAACF,EAAS3C,UAC9B4C,EAAM5C,QAAQuB,WAAWuB,eAE1B,CAACL,IAGF,eAAC,IAAMM,SAAP,WACE,cAAC,IAAD,yBACEpL,QAAS+K,EACTM,MAAON,EACPb,IAAKc,GACDH,GAJN,IAKES,WAAS,EACTC,UAAW,SAACC,GACVtJ,EAAS,2BACJ2I,GADG,IAENY,EAAGD,EAAEE,OAAOD,IAAM,EAAID,EAAEE,OAAOD,IAAM,EACrCE,EAAGH,EAAEE,OAAOC,IAAM,EAAIH,EAAEE,OAAOC,IAAM,MAGzCC,eAAgB,SAACJ,GAKf,IAAMK,EAAOb,EAAS3C,QAChByD,EAASD,EAAKC,SACdC,EAASF,EAAKE,SAGpBF,EAAKC,OAAO,GACZD,EAAKE,OAAO,GACZ7J,EAAS,2BACJ2I,GADG,IAENY,EAAGI,EAAKJ,IACRE,EAAGE,EAAKF,IAER7G,MAAO4E,KAAKsC,IAAI,EAAGH,EAAK/G,QAAUgH,GAClC/G,OAAQ2E,KAAKsC,IAAIH,EAAK9G,SAAWgH,UAItCjB,GACC,cAAC,IAAD,CACEZ,IAAKe,EACLgB,aAAc,SAACC,EAAQC,GAErB,OAAIA,EAAOrH,MAAQ,GAAKqH,EAAOpH,OAAS,EAC/BmH,EAEFC,SCjDbC,GAAmB,CACvBrI,KAAM,OACN0H,EAAG,IACHE,EAAG,IACHU,KAAM,cACNC,SAAU,GACVtH,KAAM,SAGFuH,GAAmB,CACvBxI,KAAM,OACN0H,EAAG,IACHE,EAAG,IACH7G,MAAO,IACPC,OAAQ,IACRC,KAAM,UAGFwH,GAAmB,CACvBzI,KAAM,OACN0H,EAAG,IACHE,EAAG,IACH7G,MAAO,GACPC,OAAQ,IACRC,KAAM,SAGFyH,GAAsB,CAC1B1I,KAAM,OACN0H,EAAG,IACHE,EAAG,IACH7G,MAAO,GACPC,OAAQ,GACRC,KAAM,QAyQO0H,GAtQM,WAEnB,IAAM/E,EAAWpF,IAAMqF,SACjBE,EAAkB,IAAIC,OAAOC,MACnCF,EAAgBvD,IAAM0D,EAGtB,MAA4B1F,IAAMC,SAAS,IAA3C,mBAAOmK,EAAP,KAAeC,EAAf,KACA,EAAqCrK,IAAMC,SAAS,MAApD,mBAAOqK,EAAP,KAAsBC,EAAtB,KACA,EAAsCvK,IAAMC,SAAS,IAArD,mBAAOuK,EAAP,KAAoBC,EAApB,KACA,EAAwCzK,IAAMC,SAAS,QAAvD,mBAAOyK,EAAP,KAAqBC,EAArB,KACA,EAA8C3K,IAAMC,SAAS,YAA7D,mBAAO2K,EAAP,KAAwBC,EAAxB,KAYA,IAAMC,EAAqB,WACzB,IAAMtD,EAAQpC,EAASU,QAIjB8B,EAHcJ,EAAMuD,SAGClD,KAAI,SAACC,EAAOC,GA+BrC,MAAO,CACLD,MAAO,QAAUC,EACjBE,SAhCoBH,EAAMiD,SACaC,QAAO,SAAApN,GAAO,MAA0B,gBAAtBA,EAAQiC,aAA6BgI,KAAI,SAAAjK,GAClG,MAA0B,SAAtBA,EAAQiC,UACH,CACL2B,KAAM5D,EAAQiC,UACdqI,MAAO,CACLvD,GAAI/G,EAAQ+G,KACZuE,EAAGtL,EAAQsL,IACXE,EAAGxL,EAAQwL,IACX7G,MAAO3E,EAAQ2E,QACfC,OAAQ5E,EAAQ4E,SAChBC,KAAM7E,EAAQ6E,SAGa,SAAtB7E,EAAQiC,UACV,CACL2B,KAAM5D,EAAQiC,UACdqI,MAAO,CACLvD,GAAI/G,EAAQ+G,KACZuE,EAAGtL,EAAQsL,IACXE,EAAGxL,EAAQwL,IACXU,KAAMlM,EAAQkM,OACdC,SAAUnM,EAAQmM,WAClBtH,KAAM7E,EAAQ6E,SAIb,aA3Cb,SAAsBwI,EAAQC,GAC5B,IAAIC,EAAU,gCAAkCC,mBAAmBtM,KAAK8C,UAAUqJ,EAAQ,KAAM,IAC5FI,EAAOpF,SAASqF,cAAc,KAClCD,EAAKE,SAAWL,EAChBG,EAAKG,KAAOL,EACZlF,SAASO,KAAKiF,YAAYJ,GAC1BA,EAAKlF,QACLF,SAASO,KAAKkF,YAAYL,GAmD1BM,CANsB,CACpBlE,WAAYD,EAAMjF,QAClBmF,YAAaF,EAAMhF,SACnBoF,OAAQA,GAGkB,eAG9B,SAASgE,EAAYpK,GACnB,GAAa,SAATA,EAAiB,CACnB,IAAMqK,EAAO,aACXlH,GAAI,OAASyF,EAAOY,QAAO,SAAAc,GAAK,OAAIA,EAAMnH,GAAGrC,WAAW,WAAS6F,QAC9D6B,IAGLK,EAAU,GAAD,mBAAKD,GAAL,CAAayB,UACjB,GAAa,SAATrK,EAAiB,CAC1B,IAAMuK,EAAO,aACXpH,GAAI,OAASyF,EAAOY,QAAO,SAAAc,GAAK,OAAIA,EAAMnH,GAAGrC,WAAW,WAAS6F,QAC9D0B,IAGe,KAAhBW,IACFuB,EAAQjC,KAAOU,EACfC,EAAe,KAGjBJ,EAAU,GAAD,mBAAKD,GAAL,CAAa2B,UACjB,GAAa,SAATvK,EAAiB,CAC1B,IAAMqK,EAAO,aACXlH,GAAI,OAASyF,EAAOY,QAAO,SAAAc,GAAK,OAAIA,EAAMnH,GAAGrC,WAAW,WAAS6F,QAC9D8B,IAEL,GAAwB,aAApBW,OAEG,CAEL,IAAMrI,EAAQsJ,EAAQtJ,MACtBsJ,EAAQtJ,MAAQsJ,EAAQrJ,OACxBqJ,EAAQrJ,OAASD,EAGnB8H,EAAU,GAAD,mBAAKD,GAAL,CAAayB,UACjB,GAAa,YAATrK,EAAoB,CAC7B,IAAMqK,EAAO,aACXlH,GAAI,UAAYyF,EAAOY,QAAO,SAAAc,GAAK,OAAIA,EAAMnH,GAAGrC,WAAW,cAAY6F,QACpE+B,IAEL2B,EAAQpJ,KAAOiI,EAEfL,EAAU,GAAD,mBAAKD,GAAL,CAAayB,MAI1B,OACE,gCACE,qBAAK1J,MAAO,CAAE6J,QAAS,OAAQC,cAAe,MAAOC,UAAW,OAAQC,UAAW,SAAUC,eAAgB,gBAA7G,SACqB,OAAlB9B,GAA8E,SAApDF,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAe9I,KACpE,qCACE,gCAAK,8CAAL,IAA+B,cAAC8K,EAAA,EAAD,CAAW3H,GAAG,YAAY4H,UAAU,GAAGC,YAAapC,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAe3F,GAAGR,gBACjI,gCAAK,iDAAL,IAAkC,cAACmI,EAAA,EAAD,CAAW3H,GAAG,eAAe4H,UAAU,GAAGC,YAAapC,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAe/H,MAAM4B,gBAC1I,gCAAK,kDAAL,IAAmC,cAACmI,EAAA,EAAD,CAAW3H,GAAG,gBAAgB4H,UAAU,GAAGC,YAAapC,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAe9H,OAAO2B,gBAC7I,gCAAK,sDAAL,IAAuC,cAACmI,EAAA,EAAD,CAAW3H,GAAG,eAAe4H,UAAU,GAAGC,YAAapC,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAepB,EAAE/E,gBAC3I,gCAAK,sDAAL,IAAuC,cAACmI,EAAA,EAAD,CAAW3H,GAAG,eAAe4H,UAAU,GAAGC,YAAapC,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAelB,EAAEjF,gBAC3I,gCAAK,iDAAL,IAAkC,cAACmI,EAAA,EAAD,CAAW3H,GAAG,eAAe4H,UAAU,GAAGC,YAAapC,EAAOpJ,MAAK,SAACqL,GAAD,OAAOA,EAAE1H,KAAO2F,KAAe7H,UAEpI,cAAC3C,EAAA,EAAD,CAAQrC,QAAS,WACf,IAAMgP,EAASxG,SAASC,eAAe,aAAatG,MAC9C8M,EAAYzG,SAASC,eAAe,gBAAgBtG,MACpD+M,EAAa1G,SAASC,eAAe,iBAAiBtG,MACtDgN,EAAQ3G,SAASC,eAAe,gBAAgBtG,MAChDiN,EAAQ5G,SAASC,eAAe,gBAAgBtG,MAChDkN,EAAY7G,SAASC,eAAe,gBAAgBtG,MAEpDmN,EAAa3C,EAAOvC,KAAI,SAACiE,GAU7B,OATIA,EAAMnH,KAAO2F,IACfwB,EAAMnH,GAAgB,KAAX8H,EAAgBA,EAASX,EAAMnH,GAC1CmH,EAAMvJ,MAAsB,KAAdmK,EAAmBM,SAASN,GAAaZ,EAAMvJ,MAC7DuJ,EAAMtJ,OAAwB,KAAfmK,EAAoBK,SAASL,GAAcb,EAAMtJ,OAChEsJ,EAAM5C,EAAc,KAAV0D,EAAeI,SAASJ,GAASd,EAAM5C,EACjD4C,EAAM1C,EAAc,KAAVyD,EAAeG,SAASH,GAASf,EAAM1C,EACjD0C,EAAMrJ,KAAqB,KAAdqK,EAAmBA,EAAYhB,EAAMrJ,MAG7CqJ,KAGTzB,EAAU0C,GACVxC,EAAuB,KAAXkC,EAAgBA,EAASnC,IAErCnI,MAAO,CAAE8K,WAAY,OAAQC,QAAS,QAxBxC,wBA4BA,cAACpN,EAAA,EAAD,CAAQrC,QAAS,kBAAM8M,EAAY,OAAOpI,MAAO,CAAE8K,WAAY,OAAQC,QAAS,QAAhF,yBAGF,+BAGJ,sBAAK/K,MAAO,CAAE6J,QAAS,OAAQC,cAAe,MAAOC,UAAW,QAAhE,UACE,sBAAK/J,MAAO,CAAE6J,QAAS,OAAQC,cAAe,SAAUkB,YAAa,QAArE,UACE,cAACrN,EAAA,EAAD,CAAQrC,QAAS,kBAAMmO,EAAY,SAASzJ,MAAO,CAAEiL,OAAQ,OAA7D,sBACA,cAACtN,EAAA,EAAD,CAAQrC,QAAS,kBAAMmO,EAAY,SAASzJ,MAAO,CAAEiL,OAAQ,OAA7D,sBACA,gCACE,cAACC,GAAA,EAAD,CAAU1I,GAAG,cAAc4H,UAAU,WAAW5M,SAAU,kBAAMkL,EAAmB,aAAayC,QAA6B,aAApB1C,IACzG,cAACyC,GAAA,EAAD,CAAU1I,GAAG,gBAAgB4H,UAAU,aAAa5M,SAAU,kBAAMkL,EAAmB,eAAeyC,QAA6B,eAApB1C,OAEjH,cAAC9K,EAAA,EAAD,CAAQrC,QAAS,kBAAMmO,EAAY,YAAYzJ,MAAO,CAAEiL,OAAQ,OAAhE,yBACA,gCACE,cAACC,GAAA,EAAD,CAAU1I,GAAG,UAAU4H,UAAU,OAAO9O,QAAS,kBAAMkN,EAAgB,SAAS2C,QAA0B,SAAjB5C,IACzF,cAAC2C,GAAA,EAAD,CAAU1I,GAAG,SAAS4H,UAAU,MAAM9O,QAAS,kBAAMkN,EAAgB,QAAQ2C,QAA0B,QAAjB5C,OAExF,cAAC5K,EAAA,EAAD,CAAQrC,QAAS,kBAAMmO,EAAY,SAASzJ,MAAO,CAAEiL,OAAQ,OAA7D,sBACA,8BACE,cAACd,EAAA,EAAD,CAAW3H,GAAG,aAAa4H,UAAU,GAAGC,YAAY,cAAc7M,SAAU,SAACsJ,GAAD,OAAOwB,EAAexB,EAAEE,OAAOvJ,QAAQA,MAAO4K,MAE5H,cAAC1K,EAAA,EAAD,CAAQrC,QAAS,WACX6M,IAAkBF,EAAOA,EAAOjC,OAAS,GAAGxD,IAC9C4F,EAAY,MAEdF,EAAUD,EAAOmD,MAAM,EAAGnD,EAAOjC,OAAS,KACzChG,MAAO,CAAEiL,OAAQ,OALpB,sBAMA,cAACtN,EAAA,EAAD,CAAQrC,QAAS,kBAAMqN,KAAsB3I,MAAO,CAAEiL,OAAQ,OAA9D,oBACChI,EAASU,SACR,qCACE,gDAAmBV,EAASU,QAAQvD,WACpC,iDAAoB6C,EAASU,QAAQtD,kBAK3C,qBAAKL,MAAO,CAAEqL,OAAQ,aAAtB,SACE,eAAC,IAAD,CAAOjL,MAAO,KAAMC,OAAQ,IAAKmF,IAAKvC,EAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4C,MAAOzC,EAAiBhD,MAAO,KAAMC,OAAQ,MACnD4H,EAAOvC,KAAI,SAACiE,EAAO/D,GAClB,IAAMQ,EAAa+B,IAAkBwB,EAAMnH,GAC3C,MAAmB,SAAfmH,EAAMtK,KAEN,cAAC,GAAD,CAEE8G,WAAYwD,EACZtD,SAAU,WACJ8B,IAAkBwB,EAAMnH,GAC1B4F,EAAY,MAEZA,EAAYuB,EAAMnH,KAGtBhF,SAAU,SAAC8N,GACTpD,EAAUD,EAAOvC,KAAI,SAACwE,GAAD,OAAQA,EAAE1H,KAAOmH,EAAMnH,GAAK8I,EAAWpB,OAE9D9D,WAAYA,GAZPuD,EAAMnH,IAgBV,WAIX,cAAC,IAAD,UACGyF,EAAOvC,KAAI,SAACiE,EAAO/D,GAClB,IAAMQ,EAAa+B,IAAkBwB,EAAMnH,GAC3C,MAAmB,SAAfmH,EAAMtK,KAEN,cAAC,IAAD,yBAEEuH,WAAS,GACL+C,GAHN,IAIEvD,WAAYA,EACZ9K,QAAS,WACP,GAAI6M,IAAkBwB,EAAMnH,GAAI,CAE9B,IAAM+I,EAAS,CAAC,MAAO,QAAS,SAE1BC,GADUD,EAAOE,QAAQ9B,EAAMrJ,MACb,GAAKiL,EAAOvF,OACpC2D,EAAMrJ,KAAOiL,EAAOC,GACpBpD,EAAY,WAEZA,EAAYuB,EAAMnH,OAbjBmH,EAAMnH,IAmBV,sB,eCpSR,SAASkJ,KACtB,MAAsC5N,oBAAS,GAA/C,mBAAO6N,EAAP,KAAoBC,EAApB,KACA,EAAwB9N,mBAAS,IAAjC,mBAAOpB,EAAP,KAAamP,EAAb,KAEA1J,qBAAU,WAAM,4CACd,sBAAAlF,EAAA,sEACQC,IACHC,IAAI,2DACJuH,MAAK,SAACrH,GACLwO,EAAQxO,EAASX,MACjBkP,GAAe,MALrB,4CADc,sBASVD,GATW,WAAD,wBAUZG,KAGD,CAACH,IAEJ,IAAMI,ECvBUC,mBACd,iBAAM,CACJ,CACE7Q,OAAQ,UACR8Q,SAAU,QAEZ,CACE9Q,OAAQ,iBACR8Q,SAAU,cAGd,IDaIC,EAAQC,oBAAS,CAAEJ,UAASrP,QAAQ0P,cAGxCC,EAKEH,EALFG,cACAC,EAIEJ,EAJFI,kBACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,KACAC,EACEP,EADFO,WAGF,OACE,qBAAK/O,UAAU,YAAf,SAEE,kDAAW2O,KAAX,cACE,gCACGE,EAAa7G,KAAI,SAACgH,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYtI,QAAQsB,KAAI,SAACkH,GAAD,OAEvB,aADA,CACA,gCACMA,EAAOC,eAAeD,EAAOE,yBADnC,IAEEpP,UAAWkP,EAAOG,SACdH,EAAOI,aACL,OACA,MACF,GANN,SAQGJ,EAAO5R,OAAO,wBAOzB,iDAAWsR,KAAX,aAGIE,EAAK9G,KAAI,SAACuH,GAGR,OADAR,EAAWQ,GAGT,aADA,CACA,gCAAQA,EAAIC,eAAZ,aAGID,EAAIE,MAAMzH,KAAI,SAAC0H,GAEb,OACE,8CAAQA,EAAKC,gBAAb,aACGD,EAAKpS,OAAO,6BEpExB,SAASsS,KACtB,MAAsCxP,oBAAS,GAA/C,mBAAO6N,EAAP,KAAoBC,EAApB,KACA,EAAwB9N,mBAAS,IAAjC,mBAAOpB,EAAP,KAAamP,EAAb,KAEA1J,qBAAU,WAAM,4CACd,sBAAAlF,EAAA,sEACQC,IACHC,IAAI,sDACJuH,MAAK,SAACrH,GACLwO,EAAQxO,EAASX,MACjBkP,GAAe,MALrB,4CADc,sBASVD,GATW,WAAD,wBAUZG,KAGD,CAACH,IAEJ,IAAMI,ECxBUC,mBACd,iBAAM,CACJ,CACE7Q,OAAQ,QACR8Q,SAAU,YAEZ,CACE9Q,OAAQ,UACR8Q,SAAU,WAEZ,CACE9Q,OAAQ,UACR8Q,SAAU,WAEZ,CACE9Q,OAAQ,WACR8Q,SAAU,WAEZ,CACE9Q,OAAQ,eACR8Q,SAAU,kBAGd,IDEIC,EAAQC,oBAAS,CAAEJ,UAASrP,QAAQ0P,cAGxCC,EAKEH,EALFG,cACAC,EAIEJ,EAJFI,kBACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,KACAC,EACEP,EADFO,WAGF,OACE,qBAAK/O,UAAU,YAAf,SAEE,kDAAW2O,KAAX,cACE,gCACGE,EAAa7G,KAAI,SAACgH,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYtI,QAAQsB,KAAI,SAACkH,GAAD,OAEvB,aADA,CACA,gCACMA,EAAOC,eAAeD,EAAOE,yBADnC,IAEEpP,UAAWkP,EAAOG,SACdH,EAAOI,aACL,OACA,MACF,GANN,SAQGJ,EAAO5R,OAAO,wBAOzB,iDAAWsR,KAAX,aAGIE,EAAK9G,KAAI,SAACuH,GAGR,OADAR,EAAWQ,GAGT,aADA,CACA,gCAAQA,EAAIC,eAAZ,aAGID,EAAIE,MAAMzH,KAAI,SAAC0H,GAEb,OACE,8CAAQA,EAAKC,gBAAb,aACGD,EAAKpS,OAAO,6BExExB,SAASuS,KACtB,OACE,qCACA,wBACA,qBAAK7P,UAAU,OAAf,0CACA,cAAC4P,GAAD,IACA,qBAAK5P,UAAU,OAAf,kEACA,cAACgO,GAAD,OCuBW8B,OApBf,WACE,OACE,sCACInK,OAAOoK,SAASpE,KAAKqE,SAAS,SAAW,cAAC,EAAD,IAC3C,eAACC,EAAA,EAAD,WACE,sBAAKjQ,UAAU,oBAAf,UACE,iEACA,mFAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkQ,OAAK,EAACC,KAAK,IAAIC,UAAWlL,IACjC,cAAC,IAAD,CAAOgL,OAAK,EAACC,KAAK,UAAUC,UAAW9F,KACvC,cAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,QAAQC,UAAWlQ,IACrC,cAAC,IAAD,CAAOgQ,OAAK,EAACC,KAAK,SAASC,UAAWP,e,sCChBjCQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvJ,MAAK,YAAkD,IAA/CwJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCWCO,GAfb,SAAAC,GAAW,OAAI,SAACC,EAASC,EAAcC,GAYrC,OAAOH,GAXkB,SAAC3N,EAAOC,GAC/B,IALQ8N,EAKFzJ,EAAQ0J,YAAY7N,MACpB8N,EAAWL,EAAQ5N,EAAOC,GAC1BiO,EAAMF,YAAY7N,MAClBgO,GAREJ,EAQWG,EAAM5J,EARPH,KAAKiK,MAAe,IAATL,GAAgB,KAY7C,OAFA/R,QAAQC,IAAI,wBAAyBkS,GAE9BF,IAG4BJ,EAAcC,KCNtCO,GATF,SAAAC,GAAK,OAAI,SAAA3D,GAAI,OAAI,SAAA1K,GAC5BjE,QAAQuS,MAAMtO,EAAOzB,MACrBxC,QAAQwS,KAAK,cAAevO,GAC5B,IAAIwO,EAAS9D,EAAK1K,GAGlB,OAFAjE,QAAQC,IAAI,aAAcqS,EAAMI,YAChC1S,QAAQ2S,WACDF,K,SCGX,SAASG,KAAwB,IAAbC,EAAY,uDAAH,EAC3B,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,kBAAMD,EAAQ,CAAElT,KAAMgT,MAAW,QASzC,IAAMI,GAAiBC,aAC5B,qBAD4C,uCAE5C,WAAOL,GAAP,eAAAzS,EAAA,sEACyBwS,GAAWC,GADpC,cACQrS,EADR,yBAGSA,EAASX,MAHlB,2CAF4C,uDASjCsT,GAAeC,aAAY,CACtClH,KAAM,UACN2F,aA3BmB,CACnBjR,MAAO,EACPyS,OAAQ,QA2BRC,SAAU,CACRC,UAAW,SAACvP,GAKVA,EAAMpD,OAAS,GAEjB4S,UAAW,SAACxP,GACVA,EAAMpD,OAAS,GAGjB6S,kBAAmB,SAACzP,EAAOC,GACzBD,EAAMpD,OAASqD,EAAOyP,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQZ,GAAea,SAAS,SAAC9P,GAChCA,EAAMqP,OAAS,aAEhBQ,QAAQZ,GAAec,WAAW,SAAC/P,EAAOC,GACzCD,EAAMqP,OAAS,OACfrP,EAAMpD,OAASqD,EAAOyP,cAKvB,GAAoDP,GAAaa,QAgBzDb,IAhBR,GAAQI,UAAR,GAAmBC,UAAnB,GAA8BC,kBAgBtBN,GAAf,SCtEMc,GAAcC,2BAAgB,CAClCC,QAASC,KCAX,IAAM9B,GDGS,SAAwB+B,GACrC,IAAMC,EAAc,CAACC,GAAkBC,MAGjCC,EAAY,CAFSC,mBAAe,WAAf,EAAmBJ,GAEPK,IAEnCC,EAAoB,KAaxB,OATEA,EAAoBC,WAAO,WAAP,EAAWJ,GAGnB9C,uBAAYsC,GAAaI,EAAgBO,GChB3CE,GAGZC,KAAS5W,OACP,cAAC,KAAD,CAAUmU,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJrL,SAASC,eAAe,SAa5BgK,M","file":"static/js/main.e457ce2d.chunk.js","sourcesContent":["import PageHeader from './PageHeader';\nexport default PageHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\n\nimport {\n    AppSwitcher20,\n    Notification20,\n    UserAvatar20,\n  } from '@carbon/icons-react';\nimport { Link } from 'react-router-dom';\n\nconst PageHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"guiaMe\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"AGR\">\n          guiaMe\n        </HeaderName>\n        <HeaderNavigation aria-label=\"guiaMe\">\n          <HeaderMenuItem element={Link} to=\"/room\">Room Page</HeaderMenuItem>\n          <HeaderMenuItem element={Link} to=\"/mapdev\">Map Editor</HeaderMenuItem>\n          <HeaderMenuItem element={Link} to=\"/stats\">Estadísticas</HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n                <HeaderMenuItem element={Link} to=\"/room\">\n                    Room Page\n                </HeaderMenuItem>\n                <HeaderMenuItem element={Link} to=\"/mapdev\">\n                    Map Editor\n                </HeaderMenuItem>\n                <HeaderMenuItem element={Link} to=\"/stats\">\n                    Estadísticas\n                </HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n            <HeaderGlobalAction aria-label=\"Notifications\">\n                <Notification20 />\n            </HeaderGlobalAction>\n            <HeaderGlobalAction aria-label=\"User Avatar\">\n                <UserAvatar20 />\n            </HeaderGlobalAction>\n            <HeaderGlobalAction aria-label=\"App Switcher\">\n                <AppSwitcher20 />\n            </HeaderGlobalAction>\n        </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default PageHeader;\n","export default __webpack_public_path__ + \"static/media/robot.5e2091c7.png\";","const RobotSocket = new WebSocket('ws://guiame.ddns.net:8000/ws/robot/R01/');\nRobotSocket.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log(\"RobotSocket Received: \", data);\n};\n\nconst UISocket = new WebSocket('ws://guiame.ddns.net:8000/ws/ui/PiCar/');\nUISocket.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log(\"UISocket Received: \", data);\n};\n\nconst dashboardSocket = () => {\n  return new WebSocket('ws://guiame.ddns.net:8000/ws/dashboard/');\n}\n\n\nexport { UISocket, RobotSocket, dashboardSocket };","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst getRoutes = async () => {\n  const response = await axios.get(`${baseURL}routes`);\n  return response.data;\n}\n\nexport { getRoutes };","import RoomInput from \"./RoomInput\";\nexport default RoomInput;","import React from \"react\";\n\nimport './room-input.scss';\n\nimport { Button } from \"carbon-components-react\";\n\nconst RoomInput = ({ onSubmit, onChange, value }) => {\n  return (\n    <div className=\"room-page__keyboard\">\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"1\")}>1</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"2\")}>2</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"3\")}>3</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"4\")}>4</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"5\")}>5</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"6\")}>6</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"7\")}>7</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"8\")}>8</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"9\")}>9</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(\"\")}>Reset</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"0\")}>0</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onSubmit()}>OK</Button>\n          </div>\n        </div>\n  );\n};\n\nexport default RoomInput;","import RoomPage from './RoomPage';\nexport default RoomPage;\n","import React from 'react';\nimport robot from './robot.png'\n\nimport { RobotSocket, UISocket } from '../../sockets';\nimport { Button, Tile, Modal } from 'carbon-components-react';\n\nimport { getRoutes } from '../../services/routes';\nimport RoomInput from '../../components/RoomInput';\nimport { AiOutlineArrowUp, AiOutlineArrowRight, AiOutlineArrowDown, AiOutlineArrowLeft } from \"react-icons/ai\";\n\nconst RoomPage = () => {\n  const debug = false;\n  const [roomNumber, setRoomNumber] = React.useState('');\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const [wrongRoomNumber, setWrongRoomNumber] = React.useState(false);\n  const [route, setRoute] = React.useState();\n\n  const [inPath, setInPath] = React.useState(false);\n  const [nextDirection, setNextDirection] = React.useState('');\n\n  const sendHelllo = (from) => {\n    const data = {\n      type: from === 'UI' ? 'to.robot' : 'to.ui',\n      message: \"Hello from \" + from,\n    };\n\n    if (from === \"UI\") {\n      UISocket.send(JSON.stringify(data));\n    } else {\n      RobotSocket.send(JSON.stringify(data));\n    }\n  };\n\n  const onRoomSubmit = async () => {\n    const routes = await getRoutes();\n    const route = routes.find(r => r.dest_room === roomNumber && r.origin_room === 'hall');\n\n    if (route) {\n      console.log(\"Route:\", route);\n      setRoute(route);\n      setIsModalOpen(true);\n    } else {\n      setWrongRoomNumber(true);\n    }\n  };\n\n  const onModalSubmit = () => {\n    setInPath(true);\n    setNextDirection(route.route[0]);\n\n    const data = {\n      type: 'to.robot',\n      message: {\n        type: 'start',\n        room: roomNumber,\n        route: route\n      }\n    };\n    \n    UISocket.send(JSON.stringify(data));\n    setIsModalOpen(false);\n  };\n\n  return(\n    <div className=\"room-page\">\n      {debug &&\n        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginBottom: \"10px\"}}>\n          <Button style={{margin: \"0.1rem\"}} onClick={() => sendHelllo(\"UI\")}> Client Message </Button>\n          <Button style={{margin: \"0.1rem\"}} onClick={() => sendHelllo(\"Robot\")}> Robot Message </Button>    \n        </div>\n      }\n\n      {isModalOpen && (\n        <Modal\n          open={isModalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          onRequestSubmit={() => onModalSubmit()}\n          modalHeading=\"Confirmar destino\"\n          primaryButtonText=\"Submit\"\n        >\n          <div> \n            <h1>Ir a la habitación {roomNumber}?</h1>\n            <img src=\"https://i.etsystatic.com/17441626/r/il/362050/1469060776/il_fullxfull.1469060776_e867.jpg\" alt='room'/>\n          </div>\n        </Modal>\n      )}\n\n      <Tile className=\"room-page__content\">\n        {roomNumber === \"\" ? <h3>Introduce el número de habitación</h3> : <h3>Habitación: {roomNumber}</h3>}\n        {wrongRoomNumber && <h3 style={{color: \"red\"}}>No existe la habitación</h3>}\n        {/* <TextInput id=\"room-number\" type=\"text\" value={roomNumber} placeholder=\"Nº de habitación\" disabled/> */}\n\n        {!inPath ?\n          <RoomInput onSubmit={() => onRoomSubmit()} onChange={(room) => {setRoomNumber(room); setWrongRoomNumber(false);}} value={roomNumber} />\n        :\n          <div>\n            <h4>En el próximo cruce: <strong>{nextDirection.split(\".\")[0]}</strong></h4>\n            {nextDirection.startsWith('recto') && <AiOutlineArrowUp style={{ width: \"70%\", height: \"70%\", fill: \"green\"}}/>}\n            {nextDirection.startsWith('derecha') && <AiOutlineArrowRight style={{ width: \"70%\", height: \"70%\", fill: \"green\"}}/>}\n            {nextDirection.startsWith('atras') && <AiOutlineArrowDown style={{ width: \"70%\", height: \"70%\", fill: \"green\"}}/>}\n            {nextDirection.startsWith('izquierda') && <AiOutlineArrowLeft style={{ width: \"70%\", height: \"70%\", fill: \"green\"}}/>}\n          </div>\n        }\n\n      </Tile>\n      <img src={robot} alt=\"robot\"/>\n    </div>\n  )\n};\n\nexport default RoomPage;\n","export default __webpack_public_path__ + \"static/media/background.e2288cae.png\";","\r\nimport \"./Crono.css\";\r\n\r\nimport { useEffect, useReducer } from \"react\";\r\n\r\nconst stopWatchState = {\r\n  running: false,\r\n  currentTime: 0,\r\n  lastTime: 0\r\n};\r\nfunction stopWatchReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"reset\":\r\n      return { running: false, currentTime: 0, lastTime: 0 };\r\n    case \"start\":\r\n      return { ...state, running: true, lastTime: Date.now() };\r\n    case \"stop\":\r\n      return { ...state, running: false };\r\n    case \"tick\":\r\n      if (!state.running) return state;\r\n      return {\r\n        ...state,\r\n        currentTime: state.currentTime + (Date.now() - state.lastTime),\r\n        lastTime: Date.now()\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction timeConverter(duration) {\r\n  let date = new Date(duration);\r\n  let hours = date.getHours() + date.getTimezoneOffset() / 60;\r\n  let minutes = date.getMinutes();\r\n  let seconds = date.getSeconds();\r\n  let milliseconds = date.getMilliseconds();\r\n  hours = hours.toString().padStart(2, \"0\");\r\n  minutes = minutes.toString().padStart(2, \"0\");\r\n  seconds = seconds.toString().padStart(2, \"0\");\r\n  milliseconds = milliseconds.toString().padStart(3, \"0\");\r\n\r\n  return {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    milliseconds\r\n  };\r\n}\r\n\r\nexport default function Crono() {\r\n  const [state, dispatch] = useReducer(stopWatchReducer, stopWatchState);\r\n  const time = timeConverter(state.currentTime);\r\n\r\n  useEffect(() => {\r\n    let frame;\r\n    function tick() {\r\n      dispatch({ type: \"tick\" });\r\n      frame = requestAnimationFrame(tick);\r\n    }\r\n    frame = requestAnimationFrame(tick);\r\n\r\n    return () => cancelAnimationFrame(frame);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ppal\">\r\n      <div className=\"textt\"> Tiempo en ruta : </div>\r\n      <span className=\"timer\" id=\"timer\">\r\n        {time.hours}:{time.minutes}:{time.seconds}.{time.milliseconds}\r\n      </span>\r\n      <div>\r\n        <button id=\"restart\" hidden\r\n          onClick={() => dispatch({ type: \"reset\" })}\r\n        >\r\n          Reset{\" \"}\r\n        </button>\r\n        {!state.running ? (\r\n          <button id=\"start\" hidden\r\n            onClick={() => dispatch({ type: \"start\" })}\r\n          >\r\n            start{\" \"}\r\n          </button>\r\n        ) : (\r\n          <button id=\"stop\" hidden\r\n            onClick={() => dispatch({ type: \"stop\" })}\r\n          >\r\n            stop{\" \"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport Konva from 'konva';\nimport stage from './stage.json';\nimport background from './background.png';\n\nimport { Stage, Layer, Rect, Text, Image } from 'react-konva';\nimport { dashboardSocket } from '../../sockets';\nimport Crono from '../Crono/Crono';\n\nconst dSocket = dashboardSocket();\nlet halls = [];\n\nconst Dashboard = () => {\n  const [hallId, setHallId] = React.useState('BASE');\n  const [active, setActive] = React.useState(false);\n  const stageRef = React.useRef(null);\n  const rectRef = React.useRef(null);\n\n  const backgroundImage = new window.Image();\n  backgroundImage.src = background;\n\n  var time = [];\n  var time2 = [];\n\n  dSocket.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    console.log(\"Dashboard Received: \", data);\n\n    if (data.hall !== undefined) {\n      rectRef.current.opacity(1);\n      halls.push(data.hall);\n      setHallId(data.hall);\n    }\n\n    if (data.active !== undefined && data.active && !active) {\n      setActive(true);\n      document.getElementById(\"restart\").click();\n      document.getElementById(\"start\").click();\n\n    } else if (data.active !== undefined && !data.active && active) {\n      setActive(false);\n      halls = [];\n      setHallId('BASE');\n      document.getElementById(\"stop\").click();\n      var a = document.getElementById(\"timer\").textContent;\n      time = a.split(\":\");\n      time2 = time[2].split(\".\")\n\n      var requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ robot_id: 'R01', destiny: data.route.dest_room, minutes: time[1], seconds: time2[0], miliseconds: time2[1] })\n      };\n\n      try {\n        fetch(\n          'http://guiame.ddns.net:8000/api/stats/', requestOptions)\n          .then(response => {\n            response.json()\n          })\n      }\n      catch (error) {\n        console.error(error);\n      }\n\n    }\n  };\n\n  React.useEffect(() => {\n    console.log(rectRef);\n    if (rectRef.current !== null) {\n      var period = 300;\n\n      const anim = new Konva.Animation(frame => {\n        if (rectRef.current !== null) {\n          rectRef.current.opacity((Math.sin(frame.time / period) + 1) / 2);\n        }\n\n      }, rectRef.current.getLayer());\n\n      anim.start();\n      return () => {\n        anim.stop();\n      };\n    }\n  }, []);\n\n  return (\n    <>\n      <Crono id=\"crono\"></Crono>\n      <Stage width={stage.stageWidth} height={stage.stageHeight} ref={stageRef}>\n        {stage.layers.map((layer, index) => {\n          return (\n            <Layer key={index}>\n              {index === 0 && <Image image={backgroundImage} width={1280} height={720} />}\n\n              {layer.elements.map((element, index) => {\n                if (element.type === \"Rect\") {\n                  let inPath = false;\n                  inPath = halls.find((hall) => element.attrs.id === hall) ? true : false;\n                  inPath = inPath || element.attrs.id === hallId;\n\n                  if (element.attrs.id === \"BASE\")\n                    inPath = false; //Si es el HALL inicial lo dejamos en cian\n                  if (hallId === \"BASE\" && halls.length !== 0) {\n                    halls.splice(0, halls.length);\n                    halls.splice(0, halls.length); //Al volver al HALL (id=\"hall0\") vaciamos array de halls -> \"reiniciamos\"\n                  }\n                  return <Rect key={index} {...element.attrs} fill={inPath === true ? \"green\" : element.attrs.fill} ref={element.attrs.id === hallId ? rectRef : null} />;\n                } else if (element.type === \"Text\") {\n                  return <Text key={index} {...element.attrs} />;\n                }\n\n                return null;\n              })}\n            </Layer>\n          );\n        }\n        )}\n      </Stage></>\n  );\n};\n\nexport default Dashboard;","import Dashboard from \"./Dashboard\";\nexport default Dashboard;","import React from 'react';\nimport { Rect, Transformer } from 'react-konva';\n\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <Rect\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x() > 0 ? e.target.x() : 0,\n            y: e.target.y() > 0 ? e.target.y() : 0,\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Rectangle;","import React from 'react';\nimport './dashboard.scss';\n\nimport background from './background.png';\n\n\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport { Button, Checkbox, TextInput } from 'carbon-components-react';\nimport Rectangle from './Rectangle';\n\n\nconst defaultTextProps = {\n  type: \"Text\",\n  x: 100,\n  y: 100,\n  text: 'Hello World',\n  fontSize: 16,\n  fill: \"black\",\n};\n\nconst defaultRoomProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 100,\n  height: 100,\n  fill: 'purple',\n};\n\nconst defaultHallProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 30,\n  height: 100,\n  fill: 'black',\n};\n\nconst defaultStickerProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 30,\n  height: 30,\n  fill: 'blue',\n};\n\nconst DashboardDev = () => {\n  // Stage refence to export map to JSON\n  const stageRef = React.useRef();\n  const backgroundImage = new window.Image();\n  backgroundImage.src = background;\n\n  // List of shapes in the stage and selected shape id\n  const [shapes, setShapes] = React.useState([]);\n  const [selectedShape, selectShape] = React.useState(null);\n  const [newTextData, setNewTextData] = React.useState('');\n  const [stickerColor, setStickerColor] = React.useState('blue');\n  const [hallOrientation, setHallOrientation] = React.useState('vertical');\n\n  function downloadJSON(object, name) {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(object, null, 2));\n    var link = document.createElement('a');\n    link.download = name;\n    link.href = dataStr;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  const exportCanvasToJSON = () => {\n    const stage = stageRef.current;\n    const stageLayers = stage.children;\n\n    // For each layer we are going to save the attrs of its childrens\n    const layers = stageLayers.map((layer, index) => {\n      const layerElements = layer.children;\n      const layerElementsAttrs = layerElements.filter(element => element.className !== \"Transformer\").map(element => {\n        if (element.className === \"Rect\") {\n          return {\n            type: element.className,\n            attrs: {\n              id: element.id(),\n              x: element.x(),\n              y: element.y(),\n              width: element.width(),\n              height: element.height(),\n              fill: element.fill(),\n            }\n          }\n        } else if (element.className === \"Text\") {\n          return {\n            type: element.className,\n            attrs: {\n              id: element.id(),\n              x: element.x(),\n              y: element.y(),\n              text: element.text(),\n              fontSize: element.fontSize(),\n              fill: element.fill(),\n            }\n          }\n        }\n        return null;\n      });\n\n      return {\n        layer: \"layer\" + index,\n        elements: layerElementsAttrs\n      }\n    });\n\n    const exportedStage = {\n      stageWidth: stage.width(),\n      stageHeight: stage.height(),\n      layers: layers,\n    }\n\n    downloadJSON(exportedStage, \"stage.json\");\n  };\n\n  function appendShape(type) {\n    if (type === 'room') {\n      const newRect = {\n        id: \"room\" + shapes.filter(shape => shape.id.startsWith('room')).length,\n        ...defaultRoomProps,\n      };\n\n      setShapes([...shapes, newRect]);\n    } else if (type === 'text') {\n      const newText = {\n        id: \"text\" + shapes.filter(shape => shape.id.startsWith('text')).length,\n        ...defaultTextProps,\n      };\n\n      if (newTextData !== '') {\n        newText.text = newTextData;\n        setNewTextData('');\n      }\n\n      setShapes([...shapes, newText]);\n    } else if (type === 'hall') {\n      const newRect = {\n        id: \"hall\" + shapes.filter(shape => shape.id.startsWith('hall')).length,\n        ...defaultHallProps,\n      };\n      if (hallOrientation === 'vertical') {\n        // Default vertical hall\n      } else {\n        // Default horizontal hall\n        const width = newRect.width;\n        newRect.width = newRect.height;\n        newRect.height = width;\n      }\n\n      setShapes([...shapes, newRect]);\n    } else if (type === 'sticker') {\n      const newRect = {\n        id: \"sticker\" + shapes.filter(shape => shape.id.startsWith('sticker')).length,\n        ...defaultStickerProps,\n      };\n      newRect.fill = stickerColor;\n\n      setShapes([...shapes, newRect]);\n    }\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"1rem\", textAlign: \"center\", justifyContent: \"space-around\" }}>\n        {selectedShape !== null && shapes.find((s) => s.id === selectedShape).type === \"Rect\" ?\n          <>\n            <div><strong>Shape ID</strong> <TextInput id=\"change-id\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).id.toString()} /></div>\n            <div><strong>Shape Width</strong> <TextInput id=\"change-width\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).width.toString()} /></div>\n            <div><strong>Shape Height</strong> <TextInput id=\"change-height\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).height.toString()} /></div>\n            <div><strong>Shape X-Position</strong> <TextInput id=\"change-x-pos\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).x.toString()} /></div>\n            <div><strong>Shape Y-Position</strong> <TextInput id=\"change-y-pos\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).y.toString()} /></div>\n            <div><strong>Shape Color</strong> <TextInput id=\"change-color\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).fill} /></div>\n\n            <Button onClick={() => {\n              const new_id = document.getElementById(\"change-id\").value\n              const new_width = document.getElementById(\"change-width\").value\n              const new_height = document.getElementById(\"change-height\").value\n              const new_x = document.getElementById(\"change-x-pos\").value\n              const new_y = document.getElementById(\"change-y-pos\").value\n              const new_color = document.getElementById(\"change-color\").value\n\n              const new_shapes = shapes.map((shape) => {\n                if (shape.id === selectedShape) {\n                  shape.id = new_id !== '' ? new_id : shape.id\n                  shape.width = new_width !== '' ? parseInt(new_width) : shape.width\n                  shape.height = new_height !== '' ? parseInt(new_height) : shape.height\n                  shape.x = new_x !== '' ? parseInt(new_x) : shape.x\n                  shape.y = new_y !== '' ? parseInt(new_y) : shape.y\n                  shape.fill = new_color !== '' ? new_color : shape.fill\n                }\n\n                return shape\n              })\n\n              setShapes(new_shapes)\n              selectShape(new_id !== '' ? new_id : selectedShape)\n            }}\n              style={{ marginLeft: \"1rem\", padding: \"1rem\" }}\n            >\n              Save Shape\n            </Button>\n            <Button onClick={() => selectShape(null)} style={{ marginLeft: \"10px\", padding: \"1rem\" }}>Unselect</Button>\n          </>\n          :\n          <></>\n        }\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"1rem\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"column\", marginRight: \"1rem\" }}>\n          <Button onClick={() => appendShape(\"room\")} style={{ margin: \"1px\" }}>New Room</Button>\n          <Button onClick={() => appendShape(\"hall\")} style={{ margin: \"1px\" }}>New Hall</Button>\n          <div>\n            <Checkbox id=\"cb-vertical\" labelText=\"Vertical\" onChange={() => setHallOrientation(\"vertical\")} checked={hallOrientation === \"vertical\"} />\n            <Checkbox id=\"cb-horizontal\" labelText=\"Horizontal\" onChange={() => setHallOrientation(\"horizontal\")} checked={hallOrientation === \"horizontal\"} />\n          </div>\n          <Button onClick={() => appendShape(\"sticker\")} style={{ margin: \"1px\" }}>New Sticker</Button>\n          <div>\n            <Checkbox id=\"cb-blue\" labelText=\"Blue\" onClick={() => setStickerColor(\"blue\")} checked={stickerColor === \"blue\"} />\n            <Checkbox id=\"cb-red\" labelText=\"Red\" onClick={() => setStickerColor(\"red\")} checked={stickerColor === \"red\"} />\n          </div>\n          <Button onClick={() => appendShape(\"text\")} style={{ margin: \"1px\" }}>New Text</Button>\n          <div>\n            <TextInput id=\"text-input\" labelText=\"\" placeholder=\"Hello World\" onChange={(e) => setNewTextData(e.target.value)} value={newTextData} />\n          </div>\n          <Button onClick={() => {\n            if (selectedShape === shapes[shapes.length - 1].id) {\n              selectShape(null)\n            }\n            setShapes(shapes.slice(0, shapes.length - 1))\n          }} style={{ margin: \"1px\" }}>Del Last</Button>\n          <Button onClick={() => exportCanvasToJSON()} style={{ margin: \"1px\" }}>Export</Button>\n          {stageRef.current &&\n            <>\n              <div>Stage width: {stageRef.current.width()}</div>\n              <div>Stage height: {stageRef.current.height()}</div>\n            </>\n          }\n        </div>\n\n        <div style={{ border: \"1px solid\" }}>\n          <Stage width={1280} height={720} ref={stageRef}>\n            <Layer>\n              <Image image={backgroundImage} width={1280} height={720} />\n              {shapes.map((shape, index) => {\n                const isSelected = selectedShape === shape.id;\n                if (shape.type === \"Rect\") {\n                  return (\n                    <Rectangle\n                      key={shape.id}\n                      shapeProps={shape}\n                      onSelect={() => {\n                        if (selectedShape === shape.id) {\n                          selectShape(null);\n                        } else {\n                          selectShape(shape.id);\n                        }\n                      }}\n                      onChange={(newShape) => {\n                        setShapes(shapes.map((s) => (s.id === shape.id ? newShape : s)));\n                      }}\n                      isSelected={isSelected}\n                    />\n                  );\n                }\n                return null;\n              })}\n            </Layer>\n\n            <Layer>\n              {shapes.map((shape, index) => {\n                const isSelected = selectedShape === shape.id;\n                if (shape.type === \"Text\") {\n                  return (\n                    <Text\n                      key={shape.id}\n                      draggable\n                      {...shape}\n                      isSelected={isSelected}\n                      onClick={() => {\n                        if (selectedShape === shape.id) {\n                          // Change color of the selected shape\n                          const colors = ['red', 'black', 'white'];\n                          const current = colors.indexOf(shape.fill);\n                          const next = (current + 1) % colors.length;\n                          shape.fill = colors[next];\n                          selectShape(null);\n                        } else {\n                          selectShape(shape.id);\n                        }\n                      }}\n                    />\n                  );\n                }\n                return null;\n              })}\n            </Layer>\n          </Stage>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardDev;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTable, useSortBy } from \"react-table\";\nimport useColumns2 from \"./hooks/useColumns2\";\n\nimport \"./styles.css\";\n\nexport default function StatsHalls() {\n  const [loadingData, setLoadingData] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\"http://guiame.ddns.net:8000/api/statsHalls/?format=json\")\n        .then((response) => {\n          setData(response.data);\n          setLoadingData(false);\n        });\n    }\n    if (loadingData) {\n      getData();\n    }\n    \n  }, [loadingData]);\n\n  const columns = useColumns2();\n  const table = useTable({ columns, data }, useSortBy);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n\n  return (\n    <div className=\"container\">\n      {/* Aplicamos las propiedades de la tanña */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Aplicamos las propiedades de ordenación a cada columna\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={column.isSorted\n                    ? column.isSortedDesc\n                      ? \"desc\"\n                      : \"asc\"\n                    : \"\"}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        {/* Aplicamos las propiedades de la tabla */}\n        <tbody {...getTableBodyProps()}>\n          {\n            // Bucle sobre las filas\n            rows.map((row) => {\n              // Prepara la fila para mostrar\n              prepareRow(row);\n              return (\n                // Aplicamos las propiedades de las columnas\n                <tr {...row.getRowProps()}>\n                  {\n                    // Bucle sobre las celdas\n                    row.cells.map((cell) => {\n                      // Aplicamos las propiedades de las celdas\n                      return (\n                        <td {...cell.getCellProps()}>\n                          {cell.render(\"Cell\")}\n                        </td>\n                      );\n                    })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\n\nexport default function useColumns2() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"PASILLO\",\n        accessor: \"hall\"\n      },\n      {\n        Header: \"SE HA DETENIDO\",\n        accessor: \"stopped\"\n      }\n    ],\n    []\n  );\n\n  return columns;\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTable, useSortBy } from \"react-table\";\nimport useColumns from \"./hooks/useColumns\";\n\n\nimport \"./styles.css\";\n\nexport default function StatsRoutes() {\n  const [loadingData, setLoadingData] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\"http://guiame.ddns.net:8000/api/stats/?format=json\")\n        .then((response) => {\n          setData(response.data);\n          setLoadingData(false);\n        });\n    }\n    if (loadingData) {\n      getData();\n    }\n    \n  }, [loadingData]);\n\n  const columns = useColumns();\n  const table = useTable({ columns, data }, useSortBy);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n\n  return (\n    <div className=\"container\">\n      {/* Aplicamos las propiedades de la tanña */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Aplicamos las propiedades de ordenación a cada columna\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={column.isSorted\n                    ? column.isSortedDesc\n                      ? \"desc\"\n                      : \"asc\"\n                    : \"\"}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        {/* Aplicamos las propiedades de la tabla */}\n        <tbody {...getTableBodyProps()}>\n          {\n            // Bucle sobre las filas\n            rows.map((row) => {\n              // Prepara la fila para mostrar\n              prepareRow(row);\n              return (\n                // Aplicamos las propiedades de las columnas\n                <tr {...row.getRowProps()}>\n                  {\n                    // Bucle sobre las celdas\n                    row.cells.map((cell) => {\n                      // Aplicamos las propiedades de las celdas\n                      return (\n                        <td {...cell.getCellProps()}>\n                          {cell.render(\"Cell\")}\n                        </td>\n                      );\n                    })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\n\nexport default function useColumns() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ROBOT\",\n        accessor: \"robot_id\"\n      },\n      {\n        Header: \"DESTINO\",\n        accessor: \"destiny\"\n      },\n      {\n        Header: \"MINUTOS\",\n        accessor: \"minutes\"\n      },\n      {\n        Header: \"SEGUNDOS\",\n        accessor: \"seconds\"\n      },\n      {\n        Header: \"MILISEGUNDOS\",\n        accessor: \"miliseconds\"\n      }\n    ],\n    []\n  );\n\n  return columns;\n}","import StatsHalls from \"./StatsHalls\";\nimport StatsRoutes from \"./StatsRoutes\";\n\nimport \"./styles.css\";\n\nexport default function Stats() {\n  return (\n    <>\n    <div></div>\n    <div className=\"text\">Estadísticas de las rutas</div>\n    <StatsRoutes></StatsRoutes>\n    <div className=\"text\">Pasillos en los que se ha parado debido a obstaculos</div>\n    <StatsHalls></StatsHalls>\n    </>\n  );\n}\n","// import logo from './logo.svg';\nimport React from 'react';\n\nimport './App.scss';\nimport PageHeader from './components/PageHeader';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { Content } from 'carbon-components-react';\n\nimport RoomPage from './content/RoomPage';\n\nimport Dashboard from './content/Dashboard';\nimport DashboardDev from './content/Dashboard/DashboardDev';\nimport Stats from './content/Stats/Stats';\n\nfunction App() {\n  return (\n    <>\n      {!window.location.href.includes(\"room\") && <PageHeader/>}\n      <Content>\n        <div className=\"room-page__header\">\n          <h1>GuiaMe: Automated Guiding Robot</h1>\n          <p>Un guía de confianza para gente de todo tipo</p>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/mapdev\" component={DashboardDev} />\n          <Route exact path=\"/room\" component={RoomPage} />\n          <Route exact path=\"/stats\" component={Stats} />\n        </Switch>\n      </Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer =\n  createStore => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      const start = performance.now()\n      const newState = reducer(state, action)\n      const end = performance.now()\n      const diff = round(end - start)\n\n      console.log('Reducer process time:', diff)\n\n      return newState\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n  }\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('Dispatching', action)\n    let result = next(action)\n    console.log('Next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default logger","// Create a \"reducer\" function that determines what the new state\n// should be when something happens in the app\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\nfunction fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;","import { applyMiddleware, compose, createStore, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducer'\nimport loggerMiddleware from './middleware/logger'\n\nimport counterReducer from './reducers/counterReducer'\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n})\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n\n  let composedEnhancers = null\n  if (process.env.NODE_ENV === 'development') {\n    composedEnhancers = composeWithDevTools(...enhancers)\n  } else {\n    composedEnhancers = compose(...enhancers)\n  }\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept(rootReducer, () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}","import App from './App';\nimport './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store'\n\nconst store = configureStore()\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById('root')\n  )\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./App', renderApp)\n  }\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}