{"version":3,"sources":["components/PageHeader/index.js","components/PageHeader/PageHeader.js","content/RoomPage/robot.png","sockets.js","services/routes.js","components/RoomInput/index.js","components/RoomInput/RoomInput.js","content/RoomPage/index.js","content/RoomPage/RoomPage.js","content/Dashboard/background.png","content/Crono/Crono.js","content/Dashboard/Dashboard.js","content/Dashboard/index.js","content/Dashboard/Rectangle.js","content/Dashboard/DashboardDev.js","content/Stats/StatsHalls.js","content/Stats/hooks/useColumns2.js","content/Stats/StatsRoutes.js","content/Stats/hooks/useColumns.js","content/Stats/Stats.js","images/logo_guiame.jpg","App.js","reportWebVitals.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/counterReducer.js","store.js","index.js"],"names":["PageHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","RobotSocket","WebSocket","onmessage","event","data","JSON","parse","console","log","getRoutes","a","axios","get","process","response","RoomInput","onSubmit","onChange","value","className","Button","RoomPage","React","useState","roomNumber","setRoomNumber","isModalOpen","setIsModalOpen","wrongRoomNumber","setWrongRoomNumber","route","setRoute","inPath","setInPath","nextDirection","setNextDirection","socket","message","undefined","type","i","length","includes","onRoomSubmit","routes","find","r","dest_room","origin_room","Modal","open","onRequestClose","onRequestSubmit","room","send","stringify","onModalSubmit","modalHeading","primaryButtonText","src","alt","Tile","style","color","width","height","fill","window","location","reload","split","startsWith","robot","stopWatchState","running","currentTime","lastTime","stopWatchReducer","state","action","Date","now","Crono","useReducer","dispatch","time","duration","date","hours","getHours","getTimezoneOffset","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","toString","padStart","timeConverter","useEffect","frame","requestAnimationFrame","tick","cancelAnimationFrame","id","hidden","halls","Dashboard","hallId","setHallId","active","setActive","stageRef","useRef","rectRef","backgroundImage","Image","background","time2","hall","current","opacity","push","document","getElementById","click","textContent","requestOptions","method","headers","body","robot_id","destiny","miliseconds","fetch","then","json","error","anim","Konva","Animation","Math","sin","getLayer","start","stop","stage","stageWidth","stageHeight","ref","layers","map","layer","index","image","elements","attrs","splice","Rectangle","shapeProps","isSelected","onSelect","shapeRef","trRef","nodes","batchDraw","Fragment","onTap","draggable","onDragEnd","e","x","target","y","onTransformEnd","node","scaleX","scaleY","max","boundBoxFunc","oldBox","newBox","defaultTextProps","text","fontSize","defaultRoomProps","defaultHallProps","defaultStickerProps","DashboardDev","shapes","setShapes","selectedShape","selectShape","newTextData","setNewTextData","stickerColor","setStickerColor","hallOrientation","setHallOrientation","exportCanvasToJSON","children","filter","object","name","dataStr","encodeURIComponent","link","createElement","download","href","appendChild","removeChild","downloadJSON","appendShape","newRect","shape","newText","display","flexDirection","marginTop","textAlign","justifyContent","s","TextInput","labelText","placeholder","new_id","new_width","new_height","new_x","new_y","new_color","new_shapes","parseInt","marginLeft","padding","marginRight","margin","Checkbox","checked","slice","border","newShape","colors","next","indexOf","StatsHalls","loadingData","setLoadingData","setData","getData","columns","useMemo","accessor","table","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","StatsRoutes","Stats","App","Content","logo","maxWidth","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","performance","newState","end","diff","round","logger","store","group","info","result","getState","groupEnd","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","createSlice","status","reducers","increment","decrement","incrementByAmount","payload","extraReducers","builder","addCase","pending","fulfilled","actions","rootReducer","combineReducers","counter","counterReducer","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","compose","configureStore","ReactDOM"],"mappings":"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","file":"static/js/main.e8ae5830.chunk.js","sourcesContent":["import PageHeader from './PageHeader';\nexport default PageHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\n\nimport {\n    AppSwitcher20,\n    Notification20,\n    UserAvatar20,\n  } from '@carbon/icons-react';\nimport { Link } from 'react-router-dom';\n\nconst PageHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"guiaMe\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"AGR\">\n          guiaMe\n        </HeaderName>\n        <HeaderNavigation aria-label=\"guiaMe\">\n          <HeaderMenuItem element={Link} to=\"/room\">Room Page</HeaderMenuItem>\n          <HeaderMenuItem element={Link} to=\"/mapdev\">Map Editor</HeaderMenuItem>\n          <HeaderMenuItem element={Link} to=\"/stats\">Estadísticas</HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n                <HeaderMenuItem element={Link} to=\"/room\">\n                    Room Page\n                </HeaderMenuItem>\n                <HeaderMenuItem element={Link} to=\"/mapdev\">\n                    Map Editor\n                </HeaderMenuItem>\n                <HeaderMenuItem element={Link} to=\"/stats\">\n                    Estadísticas\n                </HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n            <HeaderGlobalAction aria-label=\"Notifications\">\n                <Notification20 />\n            </HeaderGlobalAction>\n            <HeaderGlobalAction aria-label=\"User Avatar\">\n                <UserAvatar20 />\n            </HeaderGlobalAction>\n            <HeaderGlobalAction aria-label=\"App Switcher\">\n                <AppSwitcher20 />\n            </HeaderGlobalAction>\n        </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default PageHeader;\n","export default __webpack_public_path__ + \"static/media/robot.5e2091c7.png\";","const RobotSocket = new WebSocket('ws://guiame.ddns.net:8000/ws/robot/R01/');\nRobotSocket.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log(\"RobotSocket Received: \", data);\n};\n\nconst UISocket = new WebSocket('ws://guiame.ddns.net:8000/ws/ui/R01/');\nUISocket.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log(\"UISocket Received: \", data);\n};\n\nconst dashboardSocket = () => {\n  return new WebSocket('ws://guiame.ddns.net:8000/ws/dashboard/');\n}\n\nconst createUISocket = (name) => {\n  return new WebSocket('ws://guiame.ddns.net:8000/ws/ui/' + name + '/');\n}\n\nexport { UISocket, RobotSocket, dashboardSocket, createUISocket };","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst getRoutes = async () => {\n  const response = await axios.get(`${baseURL}routes`);\n  return response.data;\n}\n\nexport { getRoutes };","import RoomInput from \"./RoomInput\";\nexport default RoomInput;","import React from \"react\";\n\nimport './room-input.scss';\n\nimport { Button } from \"carbon-components-react\";\n\nconst RoomInput = ({ onSubmit, onChange, value }) => {\n  return (\n    <div className=\"room-page__keyboard\">\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"1\")}>1</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"2\")}>2</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"3\")}>3</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"4\")}>4</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"5\")}>5</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"6\")}>6</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"7\")}>7</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"8\")}>8</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"9\")}>9</Button>\n          </div>\n          <div className=\"room-page__keyboard-row\">\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(\"\")}>Reset</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onChange(value + \"0\")}>0</Button>\n            <Button className=\"room-page__keyboard-button\" onClick={() => onSubmit()}>OK</Button>\n          </div>\n        </div>\n  );\n};\n\nexport default RoomInput;","import RoomPage from './RoomPage';\nexport default RoomPage;\n","import React from 'react';\nimport robot from './robot.png'\n\nimport { createUISocket, RobotSocket } from '../../sockets';\nimport { Button, Tile, Modal } from 'carbon-components-react';\n\nimport { getRoutes } from '../../services/routes';\nimport RoomInput from '../../components/RoomInput';\nimport {\n  AiOutlineArrowUp,\n  AiOutlineArrowRight,\n  AiOutlineArrowDown,\n  AiOutlineArrowLeft,\n  AiFillStop\n} from \"react-icons/ai\";\n\nconst RoomPage = () => {\n  const debug = false;\n  const [roomNumber, setRoomNumber] = React.useState('');\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const [wrongRoomNumber, setWrongRoomNumber] = React.useState(false);\n  const [route, setRoute] = React.useState();\n  const [inPath, setInPath] = React.useState(false);\n  const [nextDirection, setNextDirection] = React.useState('');\n  const [socket,] = React.useState(createUISocket(\"PiCar\"));\n\n  socket.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    const message = data.message;\n    console.log(\"RoomPage Received: \", data);\n    if (message === undefined || message.type === undefined) {\n      return;\n    }\n\n    if (message.type === \"next_direction\") {\n      for (let i = 0; i < route[\"route\"].length; i++) {\n        if (route[\"route\"][i].includes(\"CRUCE\")) {\n          setNextDirection(route.route[i]);\n          break;\n        }\n      }\n    } else if (message.type === \"finished_route\") {\n      setNextDirection('stop');\n    }\n  }\n\n  const sendHelllo = (from) => {\n    const data = {\n      type: from === 'UI' ? 'to.robot' : 'to.ui',\n      message: \"Hello from \" + from,\n    };\n\n    if (from === \"UI\") {\n      socket.send(JSON.stringify(data));\n    } else {\n      RobotSocket.send(JSON.stringify(data));\n    }\n  };\n\n  const onRoomSubmit = async () => {\n    const routes = await getRoutes();\n    const route = routes.find(r => r.dest_room === roomNumber && r.origin_room === 'hall');\n\n    if (route) {\n      console.log(\"Route:\", route);\n      setRoute(route);\n      setIsModalOpen(true);\n    } else {\n      setWrongRoomNumber(true);\n    }\n  };\n\n  const onModalSubmit = () => {\n    setInPath(true);\n    setNextDirection(route.route[0]);\n\n    const data = {\n      type: 'to.robot',\n      message: {\n        type: 'start',\n        room: roomNumber,\n        route: route\n      }\n    };\n\n    socket.send(JSON.stringify(data));\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"room-page\">\n      {debug &&\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginBottom: \"10px\" }}>\n          <Button style={{ margin: \"0.1rem\" }} onClick={() => sendHelllo(\"UI\")}> Client Message </Button>\n          <Button style={{ margin: \"0.1rem\" }} onClick={() => sendHelllo(\"Robot\")}> Robot Message </Button>\n        </div>\n      }\n\n      {isModalOpen && (\n        <Modal\n          open={isModalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          onRequestSubmit={() => onModalSubmit()}\n          modalHeading=\"Confirmar destino\"\n          primaryButtonText=\"Submit\"\n        >\n          <div>\n            <h1>Ir a la habitación {roomNumber}?</h1>\n            <img src=\"https://i.etsystatic.com/17441626/r/il/362050/1469060776/il_fullxfull.1469060776_e867.jpg\" alt='room' />\n          </div>\n        </Modal>\n      )}\n\n      <Tile className=\"room-page__content\">\n        {roomNumber === \"\" ? <h3>Introduce o número da habitación</h3> : <h3>Habitación: {roomNumber}</h3>}\n        {wrongRoomNumber && <h3 style={{ color: \"red\" }}>Non existe a habitación</h3>}\n        {/* <TextInput id=\"room-number\" type=\"text\" value={roomNumber} placeholder=\"Nº de habitación\" disabled/> */}\n\n        {!inPath ?\n          <RoomInput onSubmit={() => onRoomSubmit()} onChange={(room) => { setRoomNumber(room); setWrongRoomNumber(false); }} value={roomNumber} />\n          :\n          <div>\n            {nextDirection === 'stop' ?\n              <>\n                <h4>Has chegado ao destino</h4>\n                <AiFillStop style={{ width: \"70%\", height: \"70%\", fill: \"green\" }} onClick={() => window.location.reload()} />\n              </>\n              :\n              <h4>No próximo cruce: <strong>{nextDirection.split(\".\")[0]}</strong></h4>\n            }\n\n            {nextDirection.startsWith('recto') && <AiOutlineArrowUp style={{ width: \"70%\", height: \"70%\", fill: \"green\" }} />}\n            {nextDirection.startsWith('derecha') && <AiOutlineArrowRight style={{ width: \"70%\", height: \"70%\", fill: \"green\" }} />}\n            {nextDirection.startsWith('vuelta') && <AiOutlineArrowDown style={{ width: \"70%\", height: \"70%\", fill: \"green\" }} />}\n            {nextDirection.startsWith('izquierda') && <AiOutlineArrowLeft style={{ width: \"70%\", height: \"70%\", fill: \"green\" }} />}\n          </div>\n        }\n\n      </Tile>\n      <img src={robot} alt=\"robot\" />\n    </div>\n  )\n};\n\nexport default RoomPage;\n","export default __webpack_public_path__ + \"static/media/background.3b8b1600.png\";","\r\nimport \"./Crono.css\";\r\n\r\nimport { useEffect, useReducer } from \"react\";\r\n\r\nconst stopWatchState = {\r\n  running: false,\r\n  currentTime: 0,\r\n  lastTime: 0\r\n};\r\nfunction stopWatchReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"reset\":\r\n      return { running: false, currentTime: 0, lastTime: 0 };\r\n    case \"start\":\r\n      return { ...state, running: true, lastTime: Date.now() };\r\n    case \"stop\":\r\n      return { ...state, running: false };\r\n    case \"tick\":\r\n      if (!state.running) return state;\r\n      return {\r\n        ...state,\r\n        currentTime: state.currentTime + (Date.now() - state.lastTime),\r\n        lastTime: Date.now()\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction timeConverter(duration) {\r\n  let date = new Date(duration);\r\n  let hours = date.getHours() + date.getTimezoneOffset() / 60;\r\n  let minutes = date.getMinutes();\r\n  let seconds = date.getSeconds();\r\n  let milliseconds = date.getMilliseconds();\r\n  hours = hours.toString().padStart(2, \"0\");\r\n  minutes = minutes.toString().padStart(2, \"0\");\r\n  seconds = seconds.toString().padStart(2, \"0\");\r\n  milliseconds = milliseconds.toString().padStart(3, \"0\");\r\n\r\n  return {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    milliseconds\r\n  };\r\n}\r\n\r\nexport default function Crono() {\r\n  const [state, dispatch] = useReducer(stopWatchReducer, stopWatchState);\r\n  const time = timeConverter(state.currentTime);\r\n\r\n  useEffect(() => {\r\n    let frame;\r\n    function tick() {\r\n      dispatch({ type: \"tick\" });\r\n      frame = requestAnimationFrame(tick);\r\n    }\r\n    frame = requestAnimationFrame(tick);\r\n\r\n    return () => cancelAnimationFrame(frame);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ppal\">\r\n      <div className=\"textt\"> Tempo en ruta : </div>\r\n      <span className=\"timer\" id=\"timer\">\r\n        {time.hours}:{time.minutes}:{time.seconds}.{time.milliseconds}\r\n      </span>\r\n      <div>\r\n        <button id=\"restart\" hidden\r\n          onClick={() => dispatch({ type: \"reset\" })}\r\n        >\r\n          Reset{\" \"}\r\n        </button>\r\n        <button id=\"start\" hidden\r\n          onClick={() => dispatch({ type: \"start\" })}\r\n        >\r\n          start{\" \"}\r\n        </button>\r\n        \r\n        <button id=\"stop\" hidden\r\n          onClick={() => dispatch({ type: \"stop\" })}\r\n        >\r\n          stop{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport Konva from 'konva';\nimport stage from './stage.json';\nimport background from './background.png';\n\nimport { Stage, Layer, Rect, Text, Image } from 'react-konva';\nimport { dashboardSocket } from '../../sockets';\nimport Crono from '../Crono/Crono';\n\nlet halls = [];\n\nconst Dashboard = () => {\n  const [hallId, setHallId] = React.useState('BASE');\n  const [active, setActive] = React.useState(false);\n  const stageRef = React.useRef(null);\n  const rectRef = React.useRef(null);\n  const [socket,] = React.useState(dashboardSocket());\n\n  const backgroundImage = new window.Image();\n  backgroundImage.src = background;\n\n  var time = [];\n  var time2 = [];\n\n  socket.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    console.log(\"Dashboard Received: \", data);\n\n    if (data.hall !== undefined) {\n      rectRef.current.opacity(1);\n      halls.push(data.hall);\n      setHallId(data.hall);\n    }\n\n    if (data.active !== undefined && data.active && !active) {\n      document.getElementById(\"restart\").click();\n      document.getElementById(\"start\").click();\n      setActive(true);\n\n    } else if (data.active !== undefined && !data.active && active) {\n      halls = [];\n      document.getElementById(\"stop\").click();\n      var a = document.getElementById(\"timer\").textContent;\n      time = a.split(\":\");\n      time2 = time[2].split(\".\")\n      setActive(false);\n      setHallId('BASE');\n\n      var requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ robot_id: 'R01', destiny: data.route.dest_room, minutes: time[1], seconds: time2[0], miliseconds: time2[1] })\n      };\n\n      try {\n        fetch(\n          'http://guiame.ddns.net:8000/api/stats/', requestOptions)\n          .then(response => {\n            response.json()\n          })\n      }\n      catch (error) {\n        console.error(error);\n      }\n\n    }\n  };\n\n  React.useEffect(() => {\n    console.log(rectRef);\n    if (rectRef.current !== null) {\n      var period = 300;\n\n      const anim = new Konva.Animation(frame => {\n        if (rectRef.current !== null) {\n          rectRef.current.opacity((Math.sin(frame.time / period) + 1) / 2);\n        }\n\n      }, rectRef.current.getLayer());\n\n      anim.start();\n      return () => {\n        anim.stop();\n      };\n    }\n  }, []);\n\n  return (\n    <>\n      <Crono id=\"crono\"></Crono>\n      <Stage width={stage.stageWidth} height={stage.stageHeight} ref={stageRef}>\n        {stage.layers.map((layer, index) => {\n          return (\n            <Layer key={index}>\n              {index === 0 && <Image image={backgroundImage} width={1280} height={720} />}\n\n              {layer.elements.map((element, index) => {\n                if (element.type === \"Rect\") {\n                  let inPath = false;\n                  inPath = halls.find((hall) => element.attrs.id === hall) ? true : false;\n                  inPath = inPath || element.attrs.id === hallId;\n\n                  if (element.attrs.id === \"BASE\")\n                    inPath = false; //Si es el HALL inicial lo dejamos en cian\n                  if (hallId === \"BASE\" && halls.length !== 0) {\n                    halls.splice(0, halls.length);\n                    halls.splice(0, halls.length); //Al volver al HALL (id=\"hall0\") vaciamos array de halls -> \"reiniciamos\"\n                  }\n                  return <Rect key={index} {...element.attrs} fill={inPath === true ? \"green\" : element.attrs.fill} ref={element.attrs.id === hallId ? rectRef : null} />;\n                } else if (element.type === \"Text\") {\n                  return <Text key={index} {...element.attrs} />;\n                }\n\n                return null;\n              })}\n            </Layer>\n          );\n        }\n        )}\n      </Stage></>\n  );\n};\n\nexport default Dashboard;","import Dashboard from \"./Dashboard\";\nexport default Dashboard;","import React from 'react';\nimport { Rect, Transformer } from 'react-konva';\n\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <Rect\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x() > 0 ? e.target.x() : 0,\n            y: e.target.y() > 0 ? e.target.y() : 0,\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Rectangle;","import React from 'react';\nimport './dashboard.scss';\n\nimport background from './background.png';\n\n\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport { Button, Checkbox, TextInput } from 'carbon-components-react';\nimport Rectangle from './Rectangle';\n\n\nconst defaultTextProps = {\n  type: \"Text\",\n  x: 100,\n  y: 100,\n  text: 'Hello World',\n  fontSize: 16,\n  fill: \"black\",\n};\n\nconst defaultRoomProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 100,\n  height: 100,\n  fill: 'purple',\n};\n\nconst defaultHallProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 30,\n  height: 100,\n  fill: 'black',\n};\n\nconst defaultStickerProps = {\n  type: \"Rect\",\n  x: 100,\n  y: 100,\n  width: 30,\n  height: 30,\n  fill: 'blue',\n};\n\nconst DashboardDev = () => {\n  // Stage refence to export map to JSON\n  const stageRef = React.useRef();\n  const backgroundImage = new window.Image();\n  backgroundImage.src = background;\n\n  // List of shapes in the stage and selected shape id\n  const [shapes, setShapes] = React.useState([]);\n  const [selectedShape, selectShape] = React.useState(null);\n  const [newTextData, setNewTextData] = React.useState('');\n  const [stickerColor, setStickerColor] = React.useState('blue');\n  const [hallOrientation, setHallOrientation] = React.useState('vertical');\n\n  function downloadJSON(object, name) {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(object, null, 2));\n    var link = document.createElement('a');\n    link.download = name;\n    link.href = dataStr;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  const exportCanvasToJSON = () => {\n    const stage = stageRef.current;\n    const stageLayers = stage.children;\n\n    // For each layer we are going to save the attrs of its childrens\n    const layers = stageLayers.map((layer, index) => {\n      const layerElements = layer.children;\n      const layerElementsAttrs = layerElements.filter(element => element.className !== \"Transformer\").map(element => {\n        if (element.className === \"Rect\") {\n          return {\n            type: element.className,\n            attrs: {\n              id: element.id(),\n              x: element.x(),\n              y: element.y(),\n              width: element.width(),\n              height: element.height(),\n              fill: element.fill(),\n            }\n          }\n        } else if (element.className === \"Text\") {\n          return {\n            type: element.className,\n            attrs: {\n              id: element.id(),\n              x: element.x(),\n              y: element.y(),\n              text: element.text(),\n              fontSize: element.fontSize(),\n              fill: element.fill(),\n            }\n          }\n        }\n        return null;\n      });\n\n      return {\n        layer: \"layer\" + index,\n        elements: layerElementsAttrs\n      }\n    });\n\n    const exportedStage = {\n      stageWidth: stage.width(),\n      stageHeight: stage.height(),\n      layers: layers,\n    }\n\n    downloadJSON(exportedStage, \"stage.json\");\n  };\n\n  function appendShape(type) {\n    if (type === 'room') {\n      const newRect = {\n        id: \"room\" + shapes.filter(shape => shape.id.startsWith('room')).length,\n        ...defaultRoomProps,\n      };\n\n      setShapes([...shapes, newRect]);\n    } else if (type === 'text') {\n      const newText = {\n        id: \"text\" + shapes.filter(shape => shape.id.startsWith('text')).length,\n        ...defaultTextProps,\n      };\n\n      if (newTextData !== '') {\n        newText.text = newTextData;\n        setNewTextData('');\n      }\n\n      setShapes([...shapes, newText]);\n    } else if (type === 'hall') {\n      const newRect = {\n        id: \"hall\" + shapes.filter(shape => shape.id.startsWith('hall')).length,\n        ...defaultHallProps,\n      };\n      if (hallOrientation === 'vertical') {\n        // Default vertical hall\n      } else {\n        // Default horizontal hall\n        const width = newRect.width;\n        newRect.width = newRect.height;\n        newRect.height = width;\n      }\n\n      setShapes([...shapes, newRect]);\n    } else if (type === 'sticker') {\n      const newRect = {\n        id: \"sticker\" + shapes.filter(shape => shape.id.startsWith('sticker')).length,\n        ...defaultStickerProps,\n      };\n      newRect.fill = stickerColor;\n\n      setShapes([...shapes, newRect]);\n    }\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"1rem\", textAlign: \"center\", justifyContent: \"space-around\" }}>\n        {selectedShape !== null && shapes.find((s) => s.id === selectedShape).type === \"Rect\" ?\n          <>\n            <div><strong>Shape ID</strong> <TextInput id=\"change-id\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).id.toString()} /></div>\n            <div><strong>Shape Width</strong> <TextInput id=\"change-width\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).width.toString()} /></div>\n            <div><strong>Shape Height</strong> <TextInput id=\"change-height\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).height.toString()} /></div>\n            <div><strong>Shape X-Position</strong> <TextInput id=\"change-x-pos\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).x.toString()} /></div>\n            <div><strong>Shape Y-Position</strong> <TextInput id=\"change-y-pos\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).y.toString()} /></div>\n            <div><strong>Shape Color</strong> <TextInput id=\"change-color\" labelText='' placeholder={shapes.find((s) => s.id === selectedShape).fill} /></div>\n\n            <Button onClick={() => {\n              const new_id = document.getElementById(\"change-id\").value\n              const new_width = document.getElementById(\"change-width\").value\n              const new_height = document.getElementById(\"change-height\").value\n              const new_x = document.getElementById(\"change-x-pos\").value\n              const new_y = document.getElementById(\"change-y-pos\").value\n              const new_color = document.getElementById(\"change-color\").value\n\n              const new_shapes = shapes.map((shape) => {\n                if (shape.id === selectedShape) {\n                  shape.id = new_id !== '' ? new_id : shape.id\n                  shape.width = new_width !== '' ? parseInt(new_width) : shape.width\n                  shape.height = new_height !== '' ? parseInt(new_height) : shape.height\n                  shape.x = new_x !== '' ? parseInt(new_x) : shape.x\n                  shape.y = new_y !== '' ? parseInt(new_y) : shape.y\n                  shape.fill = new_color !== '' ? new_color : shape.fill\n                }\n\n                return shape\n              })\n\n              setShapes(new_shapes)\n              selectShape(new_id !== '' ? new_id : selectedShape)\n            }}\n              style={{ marginLeft: \"1rem\", padding: \"1rem\" }}\n            >\n              Save Shape\n            </Button>\n            <Button onClick={() => selectShape(null)} style={{ marginLeft: \"10px\", padding: \"1rem\" }}>Unselect</Button>\n          </>\n          :\n          <></>\n        }\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"1rem\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"column\", marginRight: \"1rem\" }}>\n          <Button onClick={() => appendShape(\"room\")} style={{ margin: \"1px\" }}>New Room</Button>\n          <Button onClick={() => appendShape(\"hall\")} style={{ margin: \"1px\" }}>New Hall</Button>\n          <div>\n            <Checkbox id=\"cb-vertical\" labelText=\"Vertical\" onChange={() => setHallOrientation(\"vertical\")} checked={hallOrientation === \"vertical\"} />\n            <Checkbox id=\"cb-horizontal\" labelText=\"Horizontal\" onChange={() => setHallOrientation(\"horizontal\")} checked={hallOrientation === \"horizontal\"} />\n          </div>\n          <Button onClick={() => appendShape(\"sticker\")} style={{ margin: \"1px\" }}>New Sticker</Button>\n          <div>\n            <Checkbox id=\"cb-blue\" labelText=\"Blue\" onClick={() => setStickerColor(\"blue\")} checked={stickerColor === \"blue\"} />\n            <Checkbox id=\"cb-red\" labelText=\"Red\" onClick={() => setStickerColor(\"red\")} checked={stickerColor === \"red\"} />\n          </div>\n          <Button onClick={() => appendShape(\"text\")} style={{ margin: \"1px\" }}>New Text</Button>\n          <div>\n            <TextInput id=\"text-input\" labelText=\"\" placeholder=\"Hello World\" onChange={(e) => setNewTextData(e.target.value)} value={newTextData} />\n          </div>\n          <Button onClick={() => {\n            if (selectedShape === shapes[shapes.length - 1].id) {\n              selectShape(null)\n            }\n            setShapes(shapes.slice(0, shapes.length - 1))\n          }} style={{ margin: \"1px\" }}>Del Last</Button>\n          <Button onClick={() => exportCanvasToJSON()} style={{ margin: \"1px\" }}>Export</Button>\n          {stageRef.current &&\n            <>\n              <div>Stage width: {stageRef.current.width()}</div>\n              <div>Stage height: {stageRef.current.height()}</div>\n            </>\n          }\n        </div>\n\n        <div style={{ border: \"1px solid\" }}>\n          <Stage width={1280} height={720} ref={stageRef}>\n            <Layer>\n              <Image image={backgroundImage} width={1280} height={720} />\n              {shapes.map((shape, index) => {\n                const isSelected = selectedShape === shape.id;\n                if (shape.type === \"Rect\") {\n                  return (\n                    <Rectangle\n                      key={shape.id}\n                      shapeProps={shape}\n                      onSelect={() => {\n                        if (selectedShape === shape.id) {\n                          selectShape(null);\n                        } else {\n                          selectShape(shape.id);\n                        }\n                      }}\n                      onChange={(newShape) => {\n                        setShapes(shapes.map((s) => (s.id === shape.id ? newShape : s)));\n                      }}\n                      isSelected={isSelected}\n                    />\n                  );\n                }\n                return null;\n              })}\n            </Layer>\n\n            <Layer>\n              {shapes.map((shape, index) => {\n                const isSelected = selectedShape === shape.id;\n                if (shape.type === \"Text\") {\n                  return (\n                    <Text\n                      key={shape.id}\n                      draggable\n                      {...shape}\n                      isSelected={isSelected}\n                      onClick={() => {\n                        if (selectedShape === shape.id) {\n                          // Change color of the selected shape\n                          const colors = ['red', 'black', 'white'];\n                          const current = colors.indexOf(shape.fill);\n                          const next = (current + 1) % colors.length;\n                          shape.fill = colors[next];\n                          selectShape(null);\n                        } else {\n                          selectShape(shape.id);\n                        }\n                      }}\n                    />\n                  );\n                }\n                return null;\n              })}\n            </Layer>\n          </Stage>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardDev;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTable, useSortBy } from \"react-table\";\nimport useColumns2 from \"./hooks/useColumns2\";\n\nimport \"./styles.css\";\n\nexport default function StatsHalls() {\n  const [loadingData, setLoadingData] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\"http://guiame.ddns.net:8000/api/statsHalls/?format=json\")\n        .then((response) => {\n          setData(response.data);\n          setLoadingData(false);\n        });\n    }\n    if (loadingData) {\n      getData();\n    }\n    \n  }, [loadingData]);\n\n  const columns = useColumns2();\n  const table = useTable({ columns, data }, useSortBy);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n\n  return (\n    <div className=\"container\">\n      {/* Aplicamos las propiedades de la tanña */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Aplicamos las propiedades de ordenación a cada columna\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={column.isSorted\n                    ? column.isSortedDesc\n                      ? \"desc\"\n                      : \"asc\"\n                    : \"\"}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        {/* Aplicamos las propiedades de la tabla */}\n        <tbody {...getTableBodyProps()}>\n          {\n            // Bucle sobre las filas\n            rows.map((row) => {\n              // Prepara la fila para mostrar\n              prepareRow(row);\n              return (\n                // Aplicamos las propiedades de las columnas\n                <tr {...row.getRowProps()}>\n                  {\n                    // Bucle sobre las celdas\n                    row.cells.map((cell) => {\n                      // Aplicamos las propiedades de las celdas\n                      return (\n                        <td {...cell.getCellProps()}>\n                          {cell.render(\"Cell\")}\n                        </td>\n                      );\n                    })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\n\nexport default function useColumns2() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"PASILLO\",\n        accessor: \"hall\"\n      },\n      {\n        Header: \"DETÍVOSE\",\n        accessor: \"stopped\"\n      }\n    ],\n    []\n  );\n\n  return columns;\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTable, useSortBy } from \"react-table\";\nimport useColumns from \"./hooks/useColumns\";\n\n\nimport \"./styles.css\";\n\nexport default function StatsRoutes() {\n  const [loadingData, setLoadingData] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\"http://guiame.ddns.net:8000/api/stats/?format=json\")\n        .then((response) => {\n          setData(response.data);\n          setLoadingData(false);\n        });\n    }\n    if (loadingData) {\n      getData();\n    }\n    \n  }, [loadingData]);\n\n  const columns = useColumns();\n  const table = useTable({ columns, data }, useSortBy);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n\n  return (\n    <div className=\"container\">\n      {/* Aplicamos las propiedades de la tanña */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Aplicamos las propiedades de ordenación a cada columna\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={column.isSorted\n                    ? column.isSortedDesc\n                      ? \"desc\"\n                      : \"asc\"\n                    : \"\"}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        {/* Aplicamos las propiedades de la tabla */}\n        <tbody {...getTableBodyProps()}>\n          {\n            // Bucle sobre las filas\n            rows.map((row) => {\n              // Prepara la fila para mostrar\n              prepareRow(row);\n              return (\n                // Aplicamos las propiedades de las columnas\n                <tr {...row.getRowProps()}>\n                  {\n                    // Bucle sobre las celdas\n                    row.cells.map((cell) => {\n                      // Aplicamos las propiedades de las celdas\n                      return (\n                        <td {...cell.getCellProps()}>\n                          {cell.render(\"Cell\")}\n                        </td>\n                      );\n                    })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\n\nexport default function useColumns() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ROBOT\",\n        accessor: \"robot_id\"\n      },\n      {\n        Header: \"DESTINO\",\n        accessor: \"destiny\"\n      },\n      {\n        Header: \"MINUTOS\",\n        accessor: \"minutes\"\n      },\n      {\n        Header: \"SEGUNDOS\",\n        accessor: \"seconds\"\n      },\n      {\n        Header: \"MILISEGUNDOS\",\n        accessor: \"miliseconds\"\n      }\n    ],\n    []\n  );\n\n  return columns;\n}","import StatsHalls from \"./StatsHalls\";\nimport StatsRoutes from \"./StatsRoutes\";\n\nimport \"./styles.css\";\n\nexport default function Stats() {\n  return (\n    <>\n    <div></div>\n    <div className=\"text\">Estadísticas das rutas</div>\n    <StatsRoutes></StatsRoutes>\n    <div className=\"text\">Pasillos noss que se parou debido a obstáculos</div>\n    <StatsHalls></StatsHalls>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo_guiame.447031dc.jpg\";","// import logo from './logo.svg';\nimport React from 'react';\n\nimport './App.scss';\nimport PageHeader from './components/PageHeader';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { Content } from 'carbon-components-react';\n\nimport RoomPage from './content/RoomPage';\n\nimport Dashboard from './content/Dashboard';\nimport DashboardDev from './content/Dashboard/DashboardDev';\nimport Stats from './content/Stats/Stats';\n\nimport logo from './images/logo_guiame.jpg'\n\nfunction App() {\n  return (\n    <>\n      {!window.location.href.includes(\"room\") && <PageHeader/>}\n      <Content>\n        <div className=\"room-page__header\">\n        <h1><img src={logo} alt='descripcion' style={{ maxWidth: \"100%\" }}/></h1>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/mapdev\" component={DashboardDev} />\n          <Route exact path=\"/room\" component={RoomPage} />\n          <Route exact path=\"/stats\" component={Stats} />\n        </Switch>\n      </Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer =\n  createStore => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      const start = performance.now()\n      const newState = reducer(state, action)\n      const end = performance.now()\n      const diff = round(end - start)\n\n      console.log('Reducer process time:', diff)\n\n      return newState\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n  }\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('Dispatching', action)\n    let result = next(action)\n    console.log('Next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default logger","// Create a \"reducer\" function that determines what the new state\n// should be when something happens in the app\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\nfunction fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;","import { applyMiddleware, compose, createStore, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducer'\nimport loggerMiddleware from './middleware/logger'\n\nimport counterReducer from './reducers/counterReducer'\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n})\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n\n  let composedEnhancers = null\n  if (process.env.NODE_ENV === 'development') {\n    composedEnhancers = composeWithDevTools(...enhancers)\n  } else {\n    composedEnhancers = compose(...enhancers)\n  }\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept(rootReducer, () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}","import App from './App';\nimport './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store'\n\nconst store = configureStore()\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById('root')\n  )\n  \n  if (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./App', renderApp)\n  }\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}