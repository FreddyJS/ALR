version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - node_modules:/app/node_modules
      - ./frontend:/app
    command:
      - bash
      - -c
      - echo 'Freezing container. Execute in container "yarn start"' && tail -f /dev/null
  db:
    image: postgres:13.0-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DBNAME: ${POSTGRES_DBNAME:-guiaMe}
      POSTGRES_USER: ${POSTGRES_USER:-guiaMe}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-guiaMe}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "guiaMe"]
      interval: 5s
      timeout: 2s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./backend:/api
    environment:
      POSTGRES_DBNAME: ${POSTGRES_DBNAME:-guiaMe}
      POSTGRES_USER: ${POSTGRES_USER:-guiaMe}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-guiaMe}
    depends_on:
      db:
        condition: service_healthy
    command:
      - bash
      - -c
      - echo 'Freezing container. Execute in container "python manage.py runserver 0.0.0.0:8000"' && tail -f /dev/null

volumes:
    node_modules:
    pgdata:
